Choose a data structure that can efficiently calculate the sum of elements to its left and right. For instance, you could use an array with a prefix sum array or a balanced binary search tree.
An array with prefix sum calculation to efficiently calculate the sum of elements to its left
Using a hash map or dictionary, you can store the cumulative sums and their corresponding indices. Then, iterate through the array, for each element, calculate the total sum minus the current element (which would be the sum of elements to its right) and look up in the hash map whether this sum exists. If it does, that's your pivot index. If not, move on to the next element.

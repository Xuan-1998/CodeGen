"{\"statement\": \"Task: The task is to write a method named `getExponent(n,p)` that takes two integers `n` and `p` as input and returns the largest integer exponent `x` such that `p^(x)` evenly divides `n`. If `p` is less than or equal to 1, the method should return `null`/`None` or throw an `ArgumentOutOfRange` exception in C#.\\n\\nInput: The input consists of two integers `n` and `p` separated by a space, which are passed to the method `getExponent(n,p)` through standard input. `n` represents a positive integer not greater than 10^9, and `p` represents a positive integer not greater than 1000.\\n\\nOutput: The output is a single integer `x`, which represents the largest integer exponent such that `p^(x)` evenly divides `n`.\\n\\nConstraints: The input integer `n` is a positive integer not greater than 10^9, and the input integer `p` is a positive integer not greater than 1000.\", \"editorial\": \"\", \"tag\": \"['Fundamentals', 'Mathematics']\", \"difficulties\": \"EASY\", \"source\": \"codewars\", \"url\": \"https://www.codewars.com/kata/59b139d69c56e8939700009d\", \"sample_test_cases\": [{\"input\": [27, 3], \"output\": [3]}]}"
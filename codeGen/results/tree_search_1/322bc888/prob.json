"{\"statement\": \"Task: Given a string $s$ of length $n$, find the minimum number of operations required to make a given substring of $s$ \\\"beautiful\\\". A string is beautiful if it does not contain a palindrome substring of length at least 2. The allowed operations are changing any character of the string to one of the first 3 letters of the Latin alphabet.\\n\\nInput: The input consists of an integer $n$ and $m$ denoting the length of the string and the number of queries respectively. This is followed by the string $s$ of length $n$ and $m$ lines containing two integers $l_i$ and $r_i$ representing the parameters of the $i$-th query. The input is read from standard input.\\n\\nOutput: The output consists of $m$ lines, where each line contains a single integer representing the cost of the substring of the string $s$ from $l_i$-th to $r_i$-th position, inclusive.\\n\\nConstraints: $1 \\\\le n, m \\\\le 2 \\\\cdot 10^5$, $1 \\\\le l_i \\\\le r_i \\\\le n$ and each character of the string is one of the first 3 letters of the Latin alphabet (in lowercase).\", \"editorial\": \"\", \"tag\": \"['String algorithms', 'Dynamic programming', 'Complete search', 'Constructive algorithms']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1555/D\", \"sample_test_cases\": [{\"input\": \"5 4\\nbaacb\\n1 3\\n1 5\\n4 5\\n2 3\\n\", \"output\": \"1\\n2\\n0\\n1\\n\"}, {\"input\": \"1 1\\na\\n1 1\\n\", \"output\": \"0\\n\"}, {\"input\": \"10 3\\nababababab\\n1 2\\n1 2\\n1 2\\n\", \"output\": \"0\\n0\\n0\\n\"}, {\"input\": \"10 3\\nababababab\\n1 2\\n1 2\\n1 2\\n\", \"output\": \"0\\n0\\n0\\n\"}, {\"input\": \"1 1\\na\\n1 1\\n\", \"output\": \"0\\n\"}]}"
Create a DP table where each entry dp[i][j] represents the minimum sum for a submatrix with dimensions i x j. Overlapping subproblems occur when computing the minimum sum for different submatrices that share common sub-submatrices.
Define a recursive function solve(i, j) that returns the minimum sum of a binary matrix of size i x j. Base cases are when i or j is 1, and the recursive case accounts for adding a row or a column and distributing 1s optimally.
Instead of creating a two-dimensional DP table of size N x M, only keep a single row or column in memory and compute the next one based on it. This reduces space complexity from O(N*M) to O(min(N, M)).

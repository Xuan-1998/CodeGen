Edge List: An edge list represents the graph as a list of tuples (or lists), where each tuple contains two nodes (chapters) that have a dependency. This representation is simple and is often used when the graph is going to be processed as a whole or when edges need to be frequently added or removed.
Topological Sort with DFS: Create an adjacency list to represent the graph, then perform a Depth-First Search (DFS) to check for cycles and to find the topological order. Use memoization or a visited set to track visited nodes and prevent reprocessing. If a cycle is detected, return -1, indicating it's impossible to read the book.

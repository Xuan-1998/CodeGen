Edge List: An edge list represents the graph as a list of tuples (or lists), where each tuple contains two nodes (chapters) that have a dependency. This representation is simple and is often used when the graph is going to be processed as a whole or when edges need to be frequently added or removed.
Topological Sort with Kahn's Algorithm: Use an adjacency list for the graph and an in-degree array to track the number of prerequisites for each chapter. Iteratively remove nodes with zero in-degrees (chapters with no prerequisites), and update the in-degrees of adjacent nodes. If at any point there are no nodes with zero in-degrees and nodes remain, return -1.

"{\"statement\": \"Task: Given a sequence of the first n natural numbers, improve the bogosort algorithm by not shuffling elements that are already in the correct position. Calculate the expected amount of shuffles needed to sort the sequence using this improved algorithm.\\n\\nInput: The input consists of t test cases, where each case contains a single integer n representing the number of elements in the sequence. Input is provided through standard input.\\n\\nOutput: For each test case, output the expected amount of shuffles needed for the improved algorithm to sort the sequence of the first n natural numbers in the form of irreducible fractions.\\n\\nConstraints: There are at most 150 test cases, and each sequence contains between 2 and 150 elements.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Combinatorics', 'Mathematics', 'Probability']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codechef\", \"url\": \"https://www.codechef.com/problems/BOGOSORT\", \"sample_test_cases\": [{\"input\": \"3\\n2\\n6\\n10\", \"output\": \"2\\n1826/189\\n877318/35343\"}, {\"input\": \"3\\n2\\n4\\n10\", \"output\": \"2\\n5\\n877318/35343\\n\"}, {\"input\": \"3\\n2\\n6\\n12\", \"output\": \"2\\n1826/189\\n19455868963/549972423\\n\"}, {\"input\": \"3\\n4\\n6\\n12\", \"output\": \"5\\n1826/189\\n19455868963/549972423\\n\"}, {\"input\": \"3\\n4\\n6\\n19\", \"output\": \"5\\n1826/189\\n260073418750644288862/2955241273022663625\\n\"}]}"
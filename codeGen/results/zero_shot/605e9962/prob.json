"{\"statement\": \"Task: Given a rooted tree with $n$ vertices and a color assigned to each vertex, count the number of balanced subtrees. A subtree is considered balanced if the number of white vertices is equal to the number of black vertices.\\n\\nInput: The input consists of multiple test cases. Each test case starts with an integer $n$ ($2 \\\\le n \\\\le 4000$), the number of vertices in the tree. The next line contains $n-1$ integers $a_2, \\\\dots, a_n$ ($1 \\\\le a_i < i$), representing the parent of each vertex. The last line contains a string $s$ of length $n$ consisting of the characters ${B}$ and ${W}$, representing the color of each vertex. The input is read from standard input.\\n\\nOutput: For each test case, output a single integer, the number of balanced subtrees.\\n\\nConstraints: The sum of the values $n$ over all test cases does not exceed $2 \\\\cdot 10^5$.\", \"editorial\": \"\", \"tag\": \"['Tree algorithms', 'Graph algorithms', 'Graph traversal', 'Dynamic programming']\", \"difficulties\": \"EASY\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1676/G\", \"sample_test_cases\": [{\"input\": \"3\\n7\\n1 1 2 3 3 5\\nWBBWWBW\\n2\\n1\\nBW\\n8\\n1 2 3 4 5 6 7\\nBWBWBWBW\\n\", \"output\": \"2\\n1\\n4\\n\"}]}"
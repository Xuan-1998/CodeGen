"{\"statement\": \"Task: Given an infinite graph called the Infinite Zoo, represented by a set of vertices labeled with integers and directed edges between vertices that satisfy the condition $u\\\\&v=v$, where $\\\\&$ denotes the bitwise AND operation, determine whether a path exists between two vertices in the graph. The program should read an integer $q$ and $q$ pairs of integers $(u_i, v_i)$ from standard input, where each pair represents a query to determine whether a path exists between vertex $u_i$ and vertex $v_i$. The program should output \\\"YES\\\" if a path exists and \\\"NO\\\" otherwise.\\n\\nInput: The first line of input contains an integer $q$ ($1 \\\\leq q \\\\leq 10^5$) representing the number of queries. The $i$-th of the next $q$ lines will contain two integers $u_i$, $v_i$ ($1 \\\\leq u_i, v_i < 2^{30}$) \\u2014 a query made by Zookeeper.\\n\\nOutput: For each of the $q$ queries, output \\\"YES\\\" in a single line if there exists a directed path from vertex $u_i$ to vertex $v_i$ in the Infinite Zoo. Otherwise, output \\\"NO\\\". The output can be in any case.\\n\\nConstraints: The input integers are subject to the constraints $1 \\\\leq u_i, v_i < 2^{30}$.\", \"editorial\": \"\", \"tag\": \"['Bit manipulation', 'Constructive algorithms', 'Greedy algorithms', 'Dynamic programming', 'Mathematics']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1491/D\", \"sample_test_cases\": [{\"input\": \"5\\n1 4\\n3 6\\n1 6\\n6 2\\n5 5\\n\", \"output\": \"YES\\nYES\\nNO\\nNO\\nYES\\n\"}, {\"input\": \"5\\n1 4\\n3 7\\n1 6\\n6 2\\n5 5\\n\", \"output\": \"YES\\nNO\\nNO\\nNO\\nYES\\n\"}, {\"input\": \"5\\n1 5\\n3 6\\n1 6\\n6 2\\n5 5\\n\", \"output\": \"NO\\nYES\\nNO\\nNO\\nYES\\n\"}, {\"input\": \"5\\n1 5\\n3 6\\n1 6\\n6 2\\n4 5\\n\", \"output\": \"NO\\nYES\\nNO\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 2\\n3 7\\n2 6\\n3 2\\n6 5\\n\", \"output\": \"YES\\nNO\\nNO\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 3\\n3 7\\n2 6\\n3 2\\n6 5\\n\", \"output\": \"NO\\nNO\\nNO\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 3\\n3 7\\n2 3\\n1 2\\n6 5\\n\", \"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\n\"}, {\"input\": \"5\\n1 4\\n3 6\\n1 6\\n6 3\\n5 5\\n\", \"output\": \"YES\\nYES\\nNO\\nNO\\nYES\\n\"}, {\"input\": \"5\\n2 1\\n6 7\\n2 6\\n6 2\\n3 5\\n\", \"output\": \"NO\\nNO\\nNO\\nNO\\nYES\\n\"}, {\"input\": \"5\\n1 4\\n3 6\\n1 6\\n10 3\\n5 7\\n\", \"output\": \"YES\\nYES\\nNO\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 1\\n3 14\\n1 2\\n6 4\\n7 5\\n\", \"output\": \"YES\\nNO\\nYES\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 3\\n2 4\\n1 2\\n10 2\\n2 1\\n\", \"output\": \"NO\\nYES\\nYES\\nNO\\nNO\\n\"}, {\"input\": \"5\\n1 1\\n6 7\\n3 10\\n6 2\\n3 5\\n\", \"output\": \"YES\\nNO\\nYES\\nNO\\nYES\\n\"}, {\"input\": \"5\\n1 2\\n3 7\\n2 3\\n1 2\\n6 5\\n\", \"output\": \"YES\\nNO\\nNO\\nYES\\nNO\\n\"}, {\"input\": \"5\\n2 5\\n3 6\\n1 1\\n6 1\\n5 5\\n\", \"output\": \"NO\\nYES\\nYES\\nNO\\nYES\\n\"}]}"
"{\"statement\": \"Task: Given an alien language with an alphabet of size n and each word having m characters, find the number of possible words in the language. The language has specific rules for the placement of letters in a word based on the index of the letter in the alphabet. The output should be the number of possible words modulo $10^8+7$. \\n\\nInput: The input consists of t test cases, where each test case contains two integers n and m. The input is provided through standard input.\\n\\nOutput: For each test case, output the number of possible words modulo $10^8+7$.\\n\\nConstraints: $1\\\\leq t\\\\leq5$, $1\\\\leq n\\\\leq10^5$, and $1\\\\leq m\\\\leq5\\\\cdot10^5$.\\n\\nThe alien language can be represented as a sequence of m characters, where each character can be any of the n letters in the alphabet. The placement of letters in a word is determined by the index of the letter in the alphabet. If the index of the letter is i, then the letter can be placed at any position in the word, but if 2i>n, it can also be the last letter of the word or immediately followed by any letter, including itself. If 2i\\u2264n, the letter can only be immediately followed by a letter with an index greater than or equal to 2i and cannot be the last letter of the word. The task is to find the number of possible words that can be formed in the language with these rules. \\n\\nThe input consists of t test cases, where each test case contains two integers n and m. The first integer n represents the size of the alphabet, and the second integer m represents the length of each word. The output for each test case should be a single integer representing the number of possible words that can be formed in the language modulo $10^8+7$. The constraints for the input are $1\\\\leq t\\\\leq5$, $1\\\\leq n\\\\leq10^5$, and $1\\\\leq m\\\\leq5\\\\cdot10^5$.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"hackerrank\", \"url\": \"https://www.hackerrank.com/challenges/alien-languages/problem\", \"sample_test_cases\": [{\"input\": \"3\\n1 3\\n2 3\\n3 2\\n\", \"output\": \"1\\n3\\n6\\n\"}]}"
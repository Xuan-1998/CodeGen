"{\"statement\": \"Task: Given an array of N positive integers, find the minimum number of operations required to modify the array such that array elements are in strictly increasing order (A[i] < A[i+1]). Changing a number to greater or lesser than the original number is counted as one operation.\\n\\nInput: The input consists of a single line containing an integer N, followed by N space-separated integers representing the elements of the array. The input arrives from standard input.\\n\\nOutput: The output should consist of a single integer representing the minimum number of operations needed to make the array strictly increasing.\\n\\nConstraints: The input array has a length between 1 and 1000, and each element is a positive integer between 1 and 1000000. The expected time complexity is O(n^2) and the expected space complexity is O(n).\", \"editorial\": \"\", \"tag\": \"['Dynamic programming']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"geeksforgeeks\", \"url\": \"https://practice.geeksforgeeks.org/problems/convert-to-strictly-increasing-array3351/1\", \"sample_test_cases\": [{\"input\": \"nums[] = [1, 2, 3, 6, 5, 4]\", \"output\": \"2\"}, {\"input\": \"nums[] = [1, 2, 3, 4]\", \"output\": \"0\"}]}"
"{\"statement\": \"Task: Given a tree with $n$ nodes, label each of its $n-1$ edges with a positive integer such that the product of all $n-1$ numbers equals a given number $k$ which is the product of $m$ prime factors. The number of $1$s among all $n-1$ integers must be minimum possible. Let $f(u,v)$ be the sum of the numbers on the simple path from node $u$ to node $v$. Find the maximum possible distribution index of the tree, i.e., $\\\\sum\\\\limits_{i=1}^{n-1} \\\\sum\\\\limits_{j=i+1}^n f(i,j)$, and print it modulo $10^9 + 7$.\\n\\nInput: The input consists of multiple test cases, where each test case starts with an integer $n$ representing the number of nodes in the tree, followed by $n-1$ lines, each containing two integers $u_i$ and $v_i$ representing an edge between nodes $u_i$ and $v_i$. The next line contains an integer $m$ representing the number of prime factors of a given number $k$. The last line of each test case contains $m$ prime numbers $p_1, p_2, \\\\ldots, p_m$ such that $k = p_1 \\\\cdot p_2 \\\\cdot \\\\ldots \\\\cdot p_m$. The input is read from standard input.\\n\\nOutput: The output should consist of $T$ lines, where $T$ is the number of test cases. Each line should contain a single integer giving the maximum possible distribution index for the corresponding test case. The output should be printed modulo $10^9 + 7$.\\n\\nConstraints: $1 \\\\leq T \\\\leq 100$, $2 \\\\leq n \\\\leq 10^5$, $1 \\\\leq m \\\\leq 6 \\\\cdot 10^4$, $2 \\\\leq p_i < 6 \\\\cdot 10^4$, the sum of $n$ over all test cases doesn't exceed $10^5$, the sum of $m$ over all test cases doesn't exceed $6 \\\\cdot 10^4$, and the given edges for each test case form a tree.\", \"editorial\": \"\", \"tag\": \"['Graph traversal', 'Sorting', 'Implementation', 'Greedy algorithms', 'Number theory', 'Tree algorithms', 'Dynamic programming', 'Mathematics']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1401/D\", \"sample_test_cases\": [{\"input\": \"3\\n4\\n1 2\\n2 3\\n3 4\\n2\\n2 2\\n4\\n3 4\\n1 3\\n3 2\\n2\\n3 2\\n7\\n6 1\\n2 3\\n4 6\\n7 3\\n5 1\\n3 6\\n4\\n7 5 13 3\\n\", \"output\": \"17\\n18\\n286\\n\"}, {\"input\": \"4\\n3\\n3 1\\n2 1\\n4\\n22861 20707 59627 9293\\n3\\n3 1\\n1 2\\n6\\n15767 40973 20807 24419 46439 33757\\n3\\n3 2\\n1 2\\n6\\n16493 54493 10799 37529 59743 30529\\n3\\n3 1\\n2 1\\n1\\n42961\\n\", \"output\": \"783349080\\n330291712\\n563526719\\n85924\\n\"}, {\"input\": \"4\\n3\\n3 1\\n2 1\\n4\\n22861 20707 59627 9293\\n3\\n3 1\\n1 2\\n6\\n15767 40973 20807 24419 46439 33757\\n3\\n3 2\\n1 2\\n6\\n16493 54493 10799 37529 59743 30529\\n3\\n3 1\\n2 1\\n1\\n42961\\n\", \"output\": \"783349080\\n330291712\\n563526719\\n85924\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n2 2 2 2 2 3 3 7 109 109 167\\n\", \"output\": \"16\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n2 2 2 2 2 3 3 7 109 109 123\\n\", \"output\": \"946107806\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n2 2 2 2 3 3 3 7 109 109 123\\n\", \"output\": \"419161696\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n4 2 2 2 3 3 3 7 109 109 123\\n\", \"output\": \"838323380\\n\"}, {\"input\": \"4\\n3\\n3 1\\n2 1\\n4\\n22861 20707 59627 9293\\n3\\n3 1\\n1 2\\n6\\n15767 40973 20807 24419 46439 62816\\n3\\n3 2\\n1 2\\n6\\n16493 54493 10799 37529 59743 30529\\n3\\n3 1\\n2 1\\n1\\n42961\\n\", \"output\": \"783349080\\n372565328\\n563526719\\n85924\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n4 2 2 2 3 3 3 7 10 109 123\\n\", \"output\": \"810855372\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n4 2 2 2 3 3 6 7 10 109 123\\n\", \"output\": \"621710725\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n4 2 3 2 3 3 6 7 10 109 123\\n\", \"output\": \"432566078\\n\"}, {\"input\": \"4\\n3\\n3 1\\n2 1\\n4\\n22861 20707 59627 9293\\n3\\n3 1\\n1 2\\n6\\n15767 40973 20807 24419 46439 33757\\n3\\n3 2\\n1 2\\n6\\n16493 34019 10799 37529 59743 30529\\n3\\n3 1\\n2 1\\n1\\n42961\\n\", \"output\": \"783349080\\n330291712\\n783294328\\n85924\\n\"}, {\"input\": \"3\\n4\\n1 2\\n2 3\\n3 4\\n2\\n2 2\\n4\\n3 4\\n1 3\\n3 2\\n2\\n3 2\\n7\\n6 1\\n2 3\\n4 2\\n7 3\\n5 1\\n3 6\\n4\\n7 5 13 3\\n\", \"output\": \"17\\n18\\n306\\n\"}, {\"input\": \"1\\n4\\n1 2\\n2 3\\n3 4\\n11\\n2 2 2 2 3 3 3 2 109 109 123\\n\", \"output\": \"262617637\\n\"}, {\"input\": \"4\\n3\\n3 1\\n2 1\\n4\\n22861 20707 59627 9293\\n3\\n3 1\\n1 2\\n6\\n15767 40973 20807 24419 46439 62816\\n3\\n3 2\\n1 2\\n6\\n31575 54493 10799 37529 59743 30529\\n3\\n3 1\\n2 1\\n1\\n42961\\n\", \"output\": \"783349080\\n372565328\\n603348715\\n85924\\n\"}]}"
"{\"statement\": \"Task: Given a number line with n beacons, each with a position and power level, activate the beacons one by one from right to left. When a beacon is activated, it destroys all beacons to its left within its power range. A new beacon can be added to the right of all existing beacons with any position and power level, such that the least possible number of beacons are destroyed. Find the minimum number of beacons that could be destroyed.\\n\\nInput: The input consists of an integer n (1 \\u2264 n \\u2264 100,000) representing the initial number of beacons, followed by n lines each containing two integers a_i and b_i (0 \\u2264 a_i \\u2264 1,000,000, 1 \\u2264 b_i \\u2264 1,000,000) representing the position and power level of the i-th beacon respectively. Input is provided through standard input.\\n\\nOutput: The output is a single integer representing the minimum number of beacons that could be destroyed if exactly one beacon is added.\\n\\nConstraints: No two beacons will have the same position, so a_i \\u2260 a_j if i \\u2260 j.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Sorting']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/607/A\", \"sample_test_cases\": [{\"input\": \"4\\n1 9\\n3 1\\n6 1\\n7 4\\n\", \"output\": \"1\\n\"}, {\"input\": \"7\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n\", \"output\": \"3\\n\"}, {\"input\": \"1\\n0 1\\n\", \"output\": \"0\\n\"}, {\"input\": \"1\\n0 1000000\\n\", \"output\": \"0\\n\"}, {\"input\": \"1\\n1000000 1000000\\n\", \"output\": \"0\\n\"}, {\"input\": \"7\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 6\\n7 7\\n\", \"output\": \"4\\n\"}, {\"input\": \"5\\n1 1\\n3 1\\n5 1\\n7 10\\n8 10\\n\", \"output\": \"2\\n\"}, {\"input\": \"11\\n110 90\\n100 70\\n90 10\\n80 10\\n70 1\\n60 1\\n50 10\\n40 1\\n30 1\\n10 1\\n20 1\\n\", \"output\": \"4\\n\"}, {\"input\": \"5\\n1 1\\n3 1\\n5 1\\n7 10\\n8 10\\n\", \"output\": \"2\"}, {\"input\": \"11\\n110 90\\n100 70\\n90 10\\n80 10\\n70 1\\n60 1\\n50 10\\n40 1\\n30 1\\n10 1\\n20 1\\n\", \"output\": \"4\"}, {\"input\": \"1\\n0 1000000\\n\", \"output\": \"0\"}, {\"input\": \"1\\n1000000 1000000\\n\", \"output\": \"0\"}, {\"input\": \"7\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 6\\n7 7\\n\", \"output\": \"4\"}, {\"input\": \"1\\n0 1\\n\", \"output\": \"0\"}, {\"input\": \"11\\n110 61\\n100 70\\n90 10\\n80 10\\n70 1\\n60 1\\n50 10\\n40 1\\n30 1\\n10 1\\n20 1\\n\", \"output\": \"4\\n\"}]}"
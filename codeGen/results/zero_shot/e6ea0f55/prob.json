"{\"statement\": \"Task: Given an integer array nums and an integer k, find the maximum sum of a non-empty subsequence of nums such that the difference between the indices of any two consecutive elements in the subsequence is at most k.\\n\\nInput: The input consists of an integer array nums and an integer k, provided through standard input. The length of nums is between 1 and 10^5, and the elements of nums are integers between -10^4 and 10^4.\\n\\nOutput: The output should be a single integer representing the maximum sum of a non-empty subsequence of nums that satisfies the given condition.\\n\\nConstraints: The input constraints are that k should be between 1 and the length of nums, which itself should be between 1 and 10^5.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Data structures', 'Amortized analysis']\", \"difficulties\": \"MEDIUM\", \"source\": \"leetcode\", \"url\": \"https://leetcode.com/problems/constrained-subsequence-sum/\", \"sample_test_cases\": [{\"input\": [[10, 2, -10, 5, 20], 2], \"output\": 37}]}"
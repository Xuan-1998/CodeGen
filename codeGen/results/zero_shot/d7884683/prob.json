"{\"statement\": \"Task: Given an array of integers, find the maximum number of times the array can be partitioned into two contiguous subarrays such that the sum of elements on the left subarray is equal to the sum of elements on the right subarray.\\n\\nInput: The input consists of multiple test cases. For each test case, the first line contains an integer $t$, the number of test cases. Each test case starts with an integer $n$, the size of the array, followed by a line containing $n$ space-separated integers representing the array. The input is provided through standard input.\\n\\nOutput: For each test case, output a single integer representing the maximum number of times the array can be partitioned. The output should be printed to standard output.\\n\\nConstraints: $1\\\\leq t\\\\leq10$, $1\\\\leq n\\\\leq2^{14}$, and $0\\\\leq arr[i]\\\\leq10^9$.\\n\\nMathematical concepts: arrays, contiguous subarrays, sum of elements, partitioning, integers.\\n\\nComputer science concepts: input/output, standard input/output, loops, conditional statements.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming']\", \"difficulties\": \"MEDIUM\", \"source\": \"hackerrank\", \"url\": \"https://www.hackerrank.com/challenges/array-splitting/problem\", \"sample_test_cases\": [{\"input\": \"3\\n3\\n3 3 3\\n4\\n2 2 2 2\\n7\\n4 1 0 1 1 0 1\\n\", \"output\": \"0\\n2\\n3\\n\"}]}"
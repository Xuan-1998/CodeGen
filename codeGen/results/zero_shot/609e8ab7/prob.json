"{\"statement\": \"Task: Given a rooted tree with $n$ vertices, where each vertex has an associated range of values, adjust the values of the vertices to be within their respective ranges using a minimum number of operations. Each operation consists of selecting a vertex and a non-decreasing array of non-negative integers, and adding each element of the array to the value of the vertex and its ancestors on the path to the root.\\n\\nInput: The input consists of multiple test cases. The first line of each test case contains an integer $n$ $(2\\\\le n\\\\le 2 \\\\cdot 10^5)$, the number of vertices in the tree. The second line of each test case contains $n-1$ integers, $p_2, p_3, \\\\ldots, p_n$ $(1 \\\\leq p_i < i)$, where $p_i$ denotes the parent of the vertex $i$. The $i$-th of the following $n$ lines contains two integers $l_i$ and $r_i$ $(1 \\\\le l_i \\\\le r_i \\\\le 10^9)$, representing the range of values for vertex $i$. Input is read from standard input.\\n\\nOutput: For each test case, output the minimum number of operations needed to adjust all vertices to their respective ranges. The output should consist of $T$ lines, one for each test case.\\n\\nConstraints: $1 \\\\leq T \\\\leq 1000$, and the sum of $n$ over all test cases doesn't exceed $2 \\\\cdot 10^5$. Additionally, $1 \\\\leq p_i < i$ for all $i$, and $1 \\\\leq l_i \\\\leq r_i \\\\leq 10^9$ for all $i$.\", \"editorial\": \"\", \"tag\": \"['Tree algorithms', 'Dynamic programming', 'Graph traversal', 'Greedy algorithms']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1693/B\", \"sample_test_cases\": [{\"input\": \"4\\n2\\n1\\n1 5\\n2 9\\n3\\n1 1\\n4 5\\n2 4\\n6 10\\n4\\n1 2 1\\n6 9\\n5 6\\n4 5\\n2 4\\n5\\n1 2 3 4\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1\\n\", \"output\": \"1\\n2\\n2\\n5\\n\"}]}"
"{\"statement\": \"Task: Given a pile of stones, perform a sequence of $n$ operations on the pile. Each operation consists of either adding one stone to the pile or removing one stone from the pile. The pile is non-empty before each operation of removing one stone from the pile. Find the minimal possible number of stones in the pile after performing the given sequence of operations.\\n\\nInput: The input consists of two lines. The first line contains an integer $n$ representing the number of operations. The second line contains a string $s$ of length $n$ consisting of \\\"-\\\" or \\\"+\\\" characters, representing the operations of removing or adding a stone to the pile, respectively. The input is provided through standard input.\\n\\nOutput: The output consists of a single integer, representing the minimal possible number of stones in the pile after performing the given sequence of operations.\\n\\nConstraints: $1 \\\\leq n \\\\leq 100$.\", \"editorial\": \"\", \"tag\": \"['Mathematics', 'Implementation']\", \"difficulties\": \"EASY\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1159/A\", \"sample_test_cases\": [{\"input\": \"3\\n---\\n\", \"output\": \"0\"}, {\"input\": \"4\\n++++\\n\", \"output\": \"4\"}, {\"input\": \"2\\n-+\\n\", \"output\": \"1\"}, {\"input\": \"5\\n++-++\\n\", \"output\": \"3\"}, {\"input\": \"1\\n+\\n\", \"output\": \"1\"}, {\"input\": \"100\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\", \"output\": \"100\"}, {\"input\": \"100\\n----------------------------------------------------------------------------------------------------\\n\", \"output\": \"0\"}, {\"input\": \"100\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+++++++++++++++-++++++++++++++++++++++++++++++++++-++++++++++++++++++++++\\n\", \"output\": \"69\"}, {\"input\": \"100\\n+-+-+-++--++-++-+-+---+--++++++-++++--++-++---+--++++--+++++++-++-+--+-+-+--+-+++++-+--+---+-++-++-+\\n\", \"output\": \"17\"}, {\"input\": \"100\\n++-+-+-+-+++-++++--+++----+-+-+-------+-+-++--++--+-+++++---+-++---++-+-++---+--+-+-++-++-+---++-+--\\n\", \"output\": \"0\"}, {\"input\": \"100\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\\n\", \"output\": \"0\"}, {\"input\": \"99\\n--+++++++++++++++++++++++++++++++++++++++++++++++++------------------------------------------------\\n\", \"output\": \"1\"}, {\"input\": \"100\\n+-----+-++++----++-+--+-+++-++--+--++---++++----+-+++--+++--+---++--++--++-+--+-+-+-+-+-+-+-++-+--+-\\n\", \"output\": \"0\"}, {\"input\": \"100\\n+++++--+-+++-+-++---+-++-+---++-------++-+--+-++-+--+-+--+-+-+----++-+-----++----++++-+-+---+--+--+-\\n\", \"output\": \"0\"}, {\"input\": \"100\\n-------+-++-------------+-----+--+----++----+-----+----+-----++-------------------+-+-------+-------\\n\", \"output\": \"0\"}]}"
"{\"statement\": \"Task: Tanya is standing next to a row of $n$ candy boxes, numbered from $1$ to $n$. Each box contains $r_i$ candies of color $c_i$, where $c_i$ can be 'R', 'G', or 'B'. Tanya wants to eat at least $k$ candies while following two conditions: (1) she cannot eat candies of the same color one after another, and (2) in each next box from which she eats candies, there should be strictly more candies than in the previous one. Tanya can move to the neighbor box or eat candies in the current box. The task is to find the minimum number of seconds Tanya needs to eat at least $k$ candies, where each movement takes one second.\\n\\nInput: The input consists of an integer $n$, the initial position of Tanya $s$, and the lower bound on the number of candies to eat $k$. The following line contains $n$ integers $r_i$, which are the numbers of candies in the boxes. The third line contains a sequence of $n$ letters 'R', 'G', and 'B', meaning the colors of candies in the correspondent boxes. The input arrives from standard input.\\n\\nOutput: The output is the minimal number of seconds to eat at least $k$ candies. If the solution doesn't exist, print \\\"-1\\\".\\n\\nConstraints: $1 \\\\le n \\\\le 50$, $1 \\\\le s \\\\le n$, and $1 \\\\le k \\\\le 2000$. The numbers of candies in the boxes are between $1$ and $50$.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming']\", \"difficulties\": \"HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1057/C\", \"sample_test_cases\": [{\"input\": \"5 3 10\\n1 2 3 4 5\\nRGBRR\\n\", \"output\": \"4\\n\"}, {\"input\": \"2 1 15\\n5 6\\nRG\\n\", \"output\": \"-1\\n\"}, {\"input\": \"6 1 21\\n4 2 3 5 1 6\\nRGBGRB\\n\", \"output\": \"15\\n\"}, {\"input\": \"6 1 21\\n6 5 4 3 2 1\\nRGBRGB\\n\", \"output\": \"10\\n\"}, {\"input\": \"1 1 10\\n10\\nR\\n\", \"output\": \"0\\n\"}]}"
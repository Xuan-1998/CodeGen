"{\"statement\": \"Task: Given a bi-table consisting of two binary strings of equal length, cut it into any number of bi-tables (each consisting of consecutive columns) so that each column is in exactly one bi-table. The goal is to maximize the sum of the smallest non-negative integer that does not occur in each resulting bi-table.\\n\\nInput: The input consists of multiple test cases. The first line of each test case contains an integer $n$, representing the number of columns in the bi-table. The next two lines contain binary strings of length $n$, representing the two rows of the bi-table. The input arrives from standard input.\\n\\nOutput: For each test case, output a single integer representing the maximal sum of $\\\\operatorname{MEX}$ of all bi-tables that it is possible to get by cutting the given bi-table optimally.\\n\\nConstraints: $1 \\\\leq n \\\\leq 10^5$, $1 \\\\leq t \\\\leq 10^4$, where $t$ is the number of test cases. The sum of $n$ over all test cases does not exceed $10^5$.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Bit manipulation', 'Constructive algorithms', 'Greedy algorithms']\", \"difficulties\": \"EASY\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1566/C\", \"sample_test_cases\": [{\"input\": \"4\\n7\\n0101000\\n1101100\\n5\\n01100\\n10101\\n2\\n01\\n01\\n6\\n000000\\n111111\\n\", \"output\": \"8\\n8\\n2\\n12\\n\"}, {\"input\": \"4\\n7\\n0101000\\n1101100\\n5\\n01100\\n10101\\n2\\n01\\n01\\n6\\n000100\\n111111\\n\", \"output\": \"8\\n8\\n2\\n10\\n\"}, {\"input\": \"4\\n7\\n0101000\\n1101100\\n5\\n01000\\n10101\\n2\\n01\\n01\\n6\\n000000\\n111111\\n\", \"output\": \"8\\n9\\n2\\n12\\n\"}, {\"input\": \"4\\n7\\n0101000\\n1100100\\n5\\n01100\\n10101\\n2\\n01\\n01\\n6\\n000100\\n111111\\n\", \"output\": \"10\\n8\\n2\\n10\\n\"}, {\"input\": \"4\\n7\\n0101000\\n1101100\\n5\\n01000\\n10101\\n2\\n01\\n01\\n6\\n000000\\n111110\\n\", \"output\": \"8\\n9\\n2\\n11\\n\"}]}"
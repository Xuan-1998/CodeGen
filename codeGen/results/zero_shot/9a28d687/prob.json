"{\"statement\": \"Task: Given n strings, each with a cost associated with it, the task is to sort the strings in lexicographical order using only the operation of reversing a string. Find the minimum total cost required to sort the strings in lexicographical order. If it is impossible to sort the strings in lexicographical order, output -1.\\n\\nInput: The input consists of an integer n, followed by n integers representing the cost of reversing each string, and then n strings. The input is read from standard input.\\n\\nOutput: The output should be an integer representing the minimum total cost required to sort the strings in lexicographical order. If it is impossible to sort the strings in lexicographical order, output -1.\\n\\nConstraints: 2 \\u2264 n \\u2264 100,000, 0 \\u2264 c_{i} \\u2264 10^9, and the total length of the strings does not exceed 100,000. For the purpose of this problem, two equal strings nearby do not break the condition of sequence being sorted lexicographically. String A is lexicographically smaller than string B if it is shorter than B (|A| < |B|) and is its prefix, or if none of them is a prefix of the other and at the first position where they differ character in A is smaller than the character in B.\", \"editorial\": \"\", \"tag\": \"['String algorithms', 'Dynamic programming']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/706/C\", \"sample_test_cases\": [{\"input\": \"2\\n1 2\\nba\\nac\\n\", \"output\": \"1\\n\"}, {\"input\": \"3\\n1 3 1\\naa\\nba\\nac\\n\", \"output\": \"1\\n\"}, {\"input\": \"2\\n5 5\\nbbb\\naaa\\n\", \"output\": \"-1\\n\"}, {\"input\": \"2\\n3 3\\naaa\\naa\\n\", \"output\": \"-1\\n\"}, {\"input\": \"4\\n0 0 8 6\\nbi\\nqp\\nbt\\nya\\n\", \"output\": \"8\\n\"}, {\"input\": \"5\\n8 0 4 8 2\\nac\\ncl\\ngg\\ngm\\nfs\\n\", \"output\": \"2\\n\"}, {\"input\": \"10\\n7 7 0 0 0 1 6 6 7 3\\ndv\\ngb\\nvg\\nxg\\nkt\\nml\\nqm\\nnq\\nrt\\nxn\\n\", \"output\": \"6\\n\"}, {\"input\": \"3\\n999999999 999999999 999999999\\nxosbqqnmxq\\nsdbvjhvytx\\naydpuidgvy\\n\", \"output\": \"1999999998\\n\"}, {\"input\": \"3\\n228 1488 228\\nkek\\nlol\\nmda\\n\", \"output\": \"0\\n\"}, {\"input\": \"2\\n1 1\\naa\\naa\\n\", \"output\": \"0\\n\"}, {\"input\": \"2\\n1000000000 1000000000\\nba\\nac\\n\", \"output\": \"1000000000\\n\"}, {\"input\": \"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\\nea\\ndb\\ncc\\nbd\\nae\\n\", \"output\": \"4000000000\\n\"}, {\"input\": \"3\\n1000000000 1000000000 1000000000\\nca\\nda\\nab\\n\", \"output\": \"3000000000\\n\"}, {\"input\": \"2\\n1000000000 1000000000\\naba\\naab\\n\", \"output\": \"1000000000\\n\"}, {\"input\": \"3\\n1000000000 1000000000 1000000000\\nza\\nyb\\nxc\\n\", \"output\": \"2000000000\\n\"}]}"
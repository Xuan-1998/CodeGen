===BEGIN PLAN===
Consider each number in the array as a 'pivot'. For each pivot, calculate its greatest common divisor (GCD) with all other numbers in the array. This will create new subproblems that can be solved recursively or iteratively.

The base case would be when the array contains only one element, in which case the beauty is 0. Then we use dynamic programming to fill up the table by initializing a 2D array dp where dp[i][j] represents the maximum beauty of the array after performing operations on the first i elements and considering j as the current pivot.

Formulate state as an array of tuples, where each tuple represents a pivot and its corresponding beauty; transition by updating the beauty of adjacent pivots based on their GCDs. Calculate the GCD for each pair of numbers in the array and update dp[i][j] accordingly. 

Dynamic programming with tabulation using a 2D array to store states

===END PLAN===

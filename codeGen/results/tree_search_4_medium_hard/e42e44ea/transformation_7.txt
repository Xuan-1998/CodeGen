DP states can be defined as (i, j) where i is the current row index and j is the current column index. Memoization can be used to store intermediate results.

function f(i, j):
  if grid[i][j] <= 0:
    return -1 // since we cannot move through cells with negative points

  dp[i][j] = min(f(i-1, j), f(i, j-1)) + grid[i][j]

  if i > 0 and j > 0:
    dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + grid[i][j]
  elif i > 0:
    dp[i][j] = dp[i-1][j] + grid[i][j]
  elif j > 0:
    dp[i][j] = dp[i][j-1] + grid[i][j]

  return dp[N-1][M-1]

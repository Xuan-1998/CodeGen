// Define dp array as 2D array where dp[i][j] represents minimum comparisons needed for i groups and j girls per group
dp = new int[5*10^6 + 1][109 + 7];

int solve(int n, int k) {
    if (n == 0) return 0;
    if (k > l) return dp[n][k-1] + k - l; // base case for l

    // Calculate f(n) and store in dp array
    if (dp[n][k] == 0) {
        int res = 1;
        for (int i = 2; i <= k; i++) res = min(res, solve(n-1, i));
        dp[n][k] = res + 1;
    }
    return dp[n][k];
}

// Calculate t0·f(l) + t1·f(l + 1) + ... + tr - l·f(r)
int main() {
    int t, l, r; cin >> t >> l >> r;
    int res = 0;
    for (int i = 0; i <= r-l; i++) res += solve(t-i-1, l+i+1);
    cout << res - l*solve(0, r) % (10^9 + 7) << endl;
}

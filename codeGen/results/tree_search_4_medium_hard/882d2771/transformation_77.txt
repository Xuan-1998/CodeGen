===BEGIN PLAN===
Memoize values computed during recursion to avoid redundant calculations and accelerate computation.

The state is (l, r), where f(l) + f(l+1) + ... + f(r) represents the minimum total number of comparisons needed to select the most beautiful participant from l girls to r girls.

Calculating f(r-l+1) using the formula t0·f(l) + t1·f(l + 1) + ... + tr - l·f(r) modulo 109 + 7, where t is an array of coefficients and f(n) represents the minimum total number of comparisons needed to select the most beautiful participant from n girls.

Create a recursive function that calculates f(n) and memoize its results using a dictionary, allowing you to avoid redundant calculations.

For each t, calculate the minimum total number of comparisons needed to select the most beautiful participant from l to r using the formula t0·f(l) + t1·f(l + 1) + ... + tr - l·f(r).

Memoize all values calculated during recursion to ensure that redundant calculations are avoided.

===END PLAN===

dp = [0] * (r + 1)
for i in range(2, r + 1):
    dp[i] = min(dp[i-1] + i - 1, dp[i//2] if i % 2 == 0 else dp[(i+1)//2])

memo = {}
def f(n):
    if n <= 1:
        return 0
    if memo.get(n):
        return memo[n]
    res = 0
    for i in range(1, n+1):
        res += (n - i) * dp[i-1]
    memo[n] = res
    return res

result = sum(t* f(l+i) for i in range(r-l+1)) % (10**9 + 7)

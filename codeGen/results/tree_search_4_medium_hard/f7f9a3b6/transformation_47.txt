===BEGIN PLAN===
Consider using dynamic programming to solve this problem. Split the message into two parts, one containing only unique characters and another part with at most a[i] repeated occurrences of the same character.

Define the state as: dp[i][j] = number of ways to split s[0..i] into j substrings such that each substring has at most a[s[i-1]-1] repeated occurrences of the same character, modulo 10^9 + 7.

dp[i][j] = 
    sum(dp[i-1][k]*dp[k-1][j-k-1] for k in range(1, j)) if s[i-1] appears only once in the current substring
    dp[i-1][j] else

Use a 3D array to store the dynamic programming state and implement tabulation.

===END PLAN===

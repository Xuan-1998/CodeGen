===BEGIN PLAN===
Use a hash set to store prime numbers, then iterate over each number below n_max to count its permutations.
The base case would be when the input number is less than or equal to 1.

Determine whether a number is prime by checking if it has any divisors other than 1 and itself.
Memoize the is_prime function to avoid redundant calculations.

Iterate over all numbers from 2 to n_max, and for each number:
    - Check if it's in the hash set of primes
    - If yes, calculate its permutations and count how many have k_perms prime permutations below n_max

To optimize the plan:
- Sort the numbers in descending order before iterating over them, so you can stop as soon as you reach a number with less than k_perms permutations.
- Store the permutations for each prime number in a dictionary to avoid recalculating them.

===END PLAN===

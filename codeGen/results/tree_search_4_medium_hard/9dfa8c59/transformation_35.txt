=====BEGIN PLAN=====
Consider using a hash set to store prime numbers, then iterate over each number below n_max to count its permutations.

A dictionary storing the count of permutations for each prime number below n_max, where the key is the prime number and the value is its permutation count.

Determine if a number is prime by checking divisibility from 2 to sqrt(n), using memoization to store previously checked numbers.
Use a separate hash set to keep track of all the permutations seen so far, in order to quickly check if we've already counted a certain number's permutations.

Once we've found a number with k_ perms permutations below n_max, we can stop iterating and just report those numbers as the smallest and largest, along with their counts.

=====END PLAN=====

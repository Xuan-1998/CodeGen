===BEGIN PLAN===
Consider using a hash set to store prime numbers and iterate over each number below n_max to count its permutations. 
Let the state be a boolean value indicating whether the current number is prime, and the base case would be when the number is less than 2. 
Maintain two dynamic arrays dp1 and dp2 where:
    dp1[i] represents whether i is a prime number
    dp2[i] stores the count of permutations for the prime number i
Iterate over all numbers below n_max, for each number:
    Check if it's prime (dp1[ num ] = ? )
    If prime, calculate its permutations and update dp2[num]
Tabulate the results by creating an array to store the cumulative sums
For each number below n_max, check how many prime numbers with k_ perms have been found, return the count, the smallest and largest such primes
===END PLAN===

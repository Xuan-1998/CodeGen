===BEGIN PLAN===
Consider using a dynamic programming approach with memoization to solve this problem.

Let dp[i] be the count of prime numbers that have exactly i permutations below n_max.

Create a function is_prime(n) to check if a number is prime, and use it to generate all prime numbers less than or equal to n_max. For each prime number p, calculate its permutations by rearranging its digits. For each permutation q, check if it's also a prime number using the is_prime function. If so, increment dp[i] where i is the count of permutations that are also prime numbers below n_max.

Use a for loop to iterate over all prime numbers less than or equal to n_max and update the dp array accordingly. Then, find the smallest and largest prime numbers in the dp array that have exactly k_perms permutations.

===END PLAN===

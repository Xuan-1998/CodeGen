===BEGIN PLAN===
We use a bottom-up approach with tabulation since we need to iterate through all possible combinations of perfect squares to find the minimum number.
The state expression is dp[i], where dp[i] stores the least number of perfect squares that add up to i, for all 1 <= i <= n.
Let memo be a dictionary to store and reuse previously computed results, and update dp accordingly.
For each i from 1 to n:
    Initialize dp[i] as infinity (or any large value).
    For j from 0 to sqrt(i):
        If j * j is less than or equal to i:
            Update dp[i] with the minimum of its current value and dp[i - j * j] + 1.
    Return dp[n].
===END PLAN===

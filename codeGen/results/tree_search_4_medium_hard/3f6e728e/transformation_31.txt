===BEGIN PLAN===
dp = [[1] * (min(N, M) + 1) for _ in range(C+1)]
for i in range(1, C+1):
    for j in range(min(N, M)+1):
        dp[i][j] = sum(dp[k][min(j-1, m)] for k in range(1, i+1) if find_upper_hemisphere(k) <= j)
if N == 0:
    print('1' * C, sep=' ')
elif M == 0:
    print('1' * C, sep=' ')
else:
    print(*dp[-1], sep=' ')
===END PLAN===

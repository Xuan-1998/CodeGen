===BEGIN PLAN===
Consider using a tuple (tail, last_node_in_tail) as the state expression, where tail is the current path of the hedgehog's tail and last_node_in_tail is the most recent node added to the tail. The base case would be when the tail has reached its maximum length or when there are no more nodes that can be connected to the tail.

Use a 2D array to store the maximum beauty for each possible state (tail, last_node_in_tail) as you build it up from scratch. Initialize all values in the array to -1. Then, iterate over all edges and for each edge, update the values in the array based on whether adding this edge to the current tail would increase or decrease its beauty.

Consider using a tuple (nodes_in_tail, max_length) as the state expression instead of just (tail, last_node_in_tail), since we need to keep track of which nodes are part of the tail and their order. This could help avoid redundant calculations.

===END PLAN===

state_expression = (i, j, k) where i is the current index for string A, j is the current index for string B, and k is the number of common characters found so far;
The base case is when there are no more common characters to find, at which point the maximum similarity score is 4 times the length of the common characters minus the total lengths of the strings.
state_transition = 
    if A[i] == B[j]:
        return (i+1, j+1, k+1)
    else:
        max_score = 0
        for x in range(i):
            for y in range(j):
                if i-x <= 5 and j-y <= 5:
                    max_score = max(max_score, dp[x][y][k-1])
        return (i, j, k), max_score
dp[0][0][0] = -1
for i in range(1, len(A)):
    for j in range(1, len(B)):
        if A[i] == B[j]:
            dp[i][j][0] = (i, j, 0)
        else:
            max_score = 0
            for x in range(i):
                for y in range(j):
                    if i-x <= 5 and j-y <= 5:
                        max_score = max(max_score, dp[x][y][0])
            dp[i][j][0] = (i, j, 0), max_score
max_score = 0
for k in range(len(A)+len(B)):
    for i in range(len(A)-k):
        for j in range(len(B)-k):
            if A[i+len(A)-1-k:] == B[j+len(B)-1-k:]:
                max_score = max(max_score, dp[i][j][k] - len(A) - len(B))
            else:
                max_score = max(max_score, 4*k - len(A) - len(B))
return max_score

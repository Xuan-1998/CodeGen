BEGIN PLAN
State: (room, visited, crosses)
Transition:
    - If room is less than n+1 and has been visited before, then the next state is (room + 1, False, 0) because we need to go to the next room.
    - If room is equal to n+1, then the next state is None because we have reached our destination.

dp = {}
for room in range(1, n+2):
    for visited in [False, True]:
        for crosses in range(3): # 0, 1, and 2
            if room == 1:
                dp[(room, visited, crosses)] = 0
            elif (room, visited, crosses) not in dp:
                dp[(room, visited, crosses)] = float('inf')
                for next_state in Transition((room, visited, crosses)):
                    if next_state is not None:
                        dp[(room, visited, crosses)] = min(dp[(room, visited, crosses)], dp[next_state] + 1)
            else:
                dp[(room, visited, crosses)] = dp[(room, visited, crosses)]
return dp[(n+1, True, 2)] % (10**9 + 7)
END PLAN

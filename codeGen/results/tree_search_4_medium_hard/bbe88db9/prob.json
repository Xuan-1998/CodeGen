"{\"statement\": \"Task: Given a maze consisting of n+1 rooms, numbered from 1 to (n+1), with each room having two one-way portals, find the number of times Vasya needs to use portals to get out of the maze. Vasya starts at room 1 and needs to get to room (n+1). If Vasya is in room i and has already painted a cross on its ceiling, he uses the second portal (leading to room p_{i}) if and only if the ceiling contains an odd number of crosses, otherwise he uses the first portal. \\n\\nInput: The input consists of two lines. The first line contains an integer n (1 \\u2264 n \\u2264 10^3) representing the number of rooms. The second line contains n integers p_{i} (1 \\u2264 p_{i} \\u2264 i) representing the room number that can be reached by using the second portal in the i-th room. Input is provided through standard input.\\n\\nOutput: Print a single integer representing the number of portal moves Vasya needs to get out of the maze. The output should be printed modulo 1000000007 (10^9 + 7).\\n\\nConstraints: n is an integer between 1 and 1000, and each p_{i} is an integer between 1 and i.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Implementation']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/407/B\", \"sample_test_cases\": [{\"input\": \"2\\n1 2\\n\", \"output\": \"4\\n\"}, {\"input\": \"4\\n1 1 2 3\\n\", \"output\": \"20\\n\"}, {\"input\": \"5\\n1 1 1 1 1\\n\", \"output\": \"62\\n\"}, {\"input\": \"7\\n1 2 1 3 1 2 1\\n\", \"output\": \"154\\n\"}, {\"input\": \"1\\n1\\n\", \"output\": \"2\\n\"}, {\"input\": \"3\\n1 1 3\\n\", \"output\": \"8\\n\"}, {\"input\": \"10\\n1 1 3 2 2 1 3 4 7 5\\n\", \"output\": \"858\\n\"}, {\"input\": \"20\\n1 2 2 2 2 1 4 7 8 6 5 3 5 3 8 11 5 10 16 10\\n\", \"output\": \"433410\\n\"}, {\"input\": \"32\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"output\": \"589934534\\n\"}, {\"input\": \"10\\n1 1 3 2 2 1 3 4 7 5\\n\", \"output\": \"858\\n\"}, {\"input\": \"30\\n1 1 2 2 5 6 4 3 4 7 3 5 12 12 2 15 3 8 3 10 12 3 14 1 10 4 22 11 22 27\\n\", \"output\": \"132632316\\n\"}, {\"input\": \"70\\n1 1 2 3 4 3 5 2 2 4 8 6 13 6 13 3 5 4 5 10 11 9 11 8 12 24 21 6 9 29 25 31 17 27 3 17 35 5 21 11 27 14 33 7 33 44 22 33 21 11 38 46 53 46 3 22 5 27 55 22 41 25 56 61 27 28 11 66 68 13\\n\", \"output\": \"707517223\\n\"}, {\"input\": \"10\\n1 1 1 1 1 1 1 1 1 1\\n\", \"output\": \"2046\\n\"}, {\"input\": \"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"output\": \"2097150\\n\"}, {\"input\": \"102\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"output\": \"810970229\\n\"}]}"
===BEGIN PLAN===
There are two types of vertices - ones with outgoing edges and those without. The problem can be viewed as finding the shortest path from each vertex to all others.

The state is a boolean array dp where dp[i] is true if there's a path from 0 to i, and false otherwise. The base case is that there's no path to any vertex with an in-degree of 1.

dp[i] = (all(u, u & i == i) and dp[u])
    for i from 1 to n
        for j from 1 to n
            if dp[j] and j & i == i
                dp[i] = true

Explore using Floyd-Warshall algorithm to find the shortest path from each vertex to all others.

===END PLAN===

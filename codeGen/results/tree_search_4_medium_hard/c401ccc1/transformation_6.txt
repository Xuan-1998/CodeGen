===BEGIN PLAN===
The graph can be viewed as a sequence of bits, where each bit represents whether there's an edge from one vertex to another. Use this insight to formulate the dynamic programming problem.

Define the state as: dp[i] = whether there's a path from i to 0 (since all vertices are connected by edges). Base case: dp[0] is always true.

Create a dictionary called memo to store the dynamic programming states dp[i]. 

For each query, check if dp[u] is True. If it is, then return "YES" because there's a path from u to 0 and therefore from u to v as well. If not, then there's no path from u to v, so return "NO".

===END PLAN===

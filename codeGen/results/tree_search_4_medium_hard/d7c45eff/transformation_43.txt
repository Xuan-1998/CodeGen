{
  DP state: Initialize an array dp with n+1 elements where each element represents the lexicographically smallest string that can be formed by either deleting the last character or duplicating the original string up to length i. 
  For each string of length i, consider all possible strings that can be formed by either deleting the last character (s[:i-1]) or duplicating the original string (s[:i]). Find the lexicographically smallest one among them and update dp[i] accordingly.
  Memoization: Create a dictionary memo to store the results of subproblems. For each i, check if there is a solution in memo that can be used for calculation of dp[i]. If so, use it to avoid re-computing the same subproblem multiple times.
  Final Answer: The lexicographically smallest string of length k can be obtained by either deleting the last character or duplicating the original string. To find this string, iterate from i=1 to k and select the string that corresponds to dp[i] as the answer.
}

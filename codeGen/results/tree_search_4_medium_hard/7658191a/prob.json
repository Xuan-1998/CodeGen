"{\"statement\": \"Task: Given an array of positive integers, starting at index 1 with a score equal to the value at that index, perform exactly k moves, with no more than z moves to the left and no two or more moves to the left in a row. A move can either be to the right, adding the value at the next index to the score, or to the left, adding the value at the previous index to the score. Find the maximum score that can be achieved.\\n\\nInput: The input consists of t test cases. The first line of each test case contains three integers n, k, and z. The second line contains n integers representing the array. It is guaranteed that the sum of n over all test cases does not exceed 3 \\u00d7 10^5.\\n\\nOutput: The output should consist of t lines. Each line should contain a single integer giving the maximum score that can be achieved for the corresponding test case.\\n\\nConstraints: $1 \\\\le t \\\\le 10^4$, $2 \\\\le n \\\\le 10^5$, $1 \\\\le k \\\\le n - 1$, $0 \\\\le z \\\\le \\\\min(5, k)$, $1 \\\\le a_i \\\\le 10^4$.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Complete search', 'Greedy algorithms']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1389/B\", \"sample_test_cases\": [{\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n5 4 4\\n10 20 30 40 50\\n10 7 3\\n4 6 8 2 9 9 7 4 10 9\\n\", \"output\": \"15\\n19\\n150\\n56\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n\", \"output\": \"19\\n19\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n\", \"output\": \"19\\n19\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 2 3 2\\n5 4 1\\n1 5 4 3 2\\n\", \"output\": \"15\\n19\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n5 4 4\\n10 20 30 40 50\\n10 3 3\\n4 6 8 2 9 9 7 4 10 9\\n\", \"output\": \"15\\n19\\n150\\n24\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 2 3 2\\n5 1 1\\n1 5 4 3 2\\n\", \"output\": \"15\\n6\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n5 4 4\\n10 20 30 40 50\\n10 3 3\\n4 9 8 2 9 9 7 4 5 9\\n\", \"output\": \"15\\n19\\n150\\n30\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 4 3 2\\n5 4 1\\n1 5 4 6 2\\n\", \"output\": \"19\\n20\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 7 3 2\\n5 4 4\\n10 20 30 40 50\\n10 7 3\\n4 6 8 2 9 9 7 4 10 9\\n\", \"output\": \"15\\n25\\n150\\n56\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 4 3 2\\n5 4 4\\n10 20 30 70 50\\n10 3 3\\n4 9 8 2 9 9 7 4 5 9\\n\", \"output\": \"15\\n19\\n180\\n30\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 4 3 2\\n5 4 1\\n1 5 7 6 2\\n\", \"output\": \"19\\n26\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 5 7 3 2\\n5 4 4\\n10 20 30 40 50\\n10 7 3\\n4 6 8 2 9 12 7 4 10 9\\n\", \"output\": \"15\\n25\\n150\\n62\\n\"}, {\"input\": \"2\\n5 4 1\\n2 5 2 3 2\\n5 1 0\\n1 5 4 0 2\\n\", \"output\": \"16\\n6\\n\"}, {\"input\": \"2\\n5 4 1\\n1 5 2 3 1\\n5 1 0\\n0 5 4 3 1\\n\", \"output\": \"15\\n5\\n\"}, {\"input\": \"4\\n5 4 0\\n1 5 4 3 2\\n5 4 1\\n1 1 7 3 2\\n5 4 4\\n10 20 30 40 50\\n10 7 3\\n4 6 8 2 9 12 7 4 10 9\\n\", \"output\": \"15\\n19\\n150\\n62\\n\"}]}"
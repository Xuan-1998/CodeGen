===BEGIN PLAN===
dp_base_case = 1
dp = {0: dp_base_case}

for i in range(1, n+1):
    if '1' not in bin(i)[2:]:
        dp[i] = dp_base_case
    else:
        last_zero_index = None
        for bit in bin(i)[2:]:
            if bit == '1':
                if last_zero_index is not None:
                    break
                last_zero_index = len(bin(i)[2:]) - 1
            elif last_zero_index is None:
                last_zero_index = len(bin(i)[2:])
        else:
            dp[i] = dp.get(last_zero_index, 0)
    dp_base_case += dp_base_case

print(dp[n])
===END PLAN===

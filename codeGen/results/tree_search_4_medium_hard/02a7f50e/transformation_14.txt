Dynamic programming approach: Consider a 2D DP table where dp[i][j] represents the minimum number of beacons that could be destroyed if exactly one beacon is added at position i with power j.

dp[i][j] = min(dp[k][max(0,j-b_k)] + (i-k) for k in range(i))
for each 0 ≤ i < n and 1 ≤ j ≤ 1,000,000

Memoization: Store the intermediate results for each subproblem and reuse them when needed.

"{\"statement\": \"Task: Given a list of non-negative integers representing the positions of stones in ascending order, determine if a frog can cross a river by jumping on the stones. The frog can only jump forward and the distance of each jump must be either k - 1, k, or k + 1 units, where k is the distance of the previous jump. The frog starts on the first stone and must reach the last stone without jumping into the water.\\n\\nInput: The input consists of a list of non-negative integers representing the positions of stones in ascending order. The input is read from standard input.\\n\\nOutput: The output is a boolean value indicating whether or not the frog can reach the last stone without jumping into the water.\\n\\nConstraints: The input list will have at least 2 and at most 1,100 stones. Each stone's position will be a non-negative integer less than 2^31. The first stone's position is always 0.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Data structures']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"leetcode\", \"url\": \"https://leetcode.com/problems/frog-jump/\", \"sample_test_cases\": [{\"input\": [[0, 1, 3, 4, 5, 7, 9, 10, 12]], \"output\": true}]}"
===BEGIN PLAN===
dp = [[[0 for _ in range(11)] for _ in range(m+1)] for _ in range(n+1)]
for i in range(n+1):
    dp[i][0][0] = 0
for j in range(m+1):
    dp[0][j][0] = 0

def max_profit(i, j, k):
    if i < c[j]:
        return dp[i][j-1][k]
    else:
        return dp[i-c[j]][j-1][k-1]

for i in range(1, n+1):
    for j in range(m+1):
        if i >= c[j]:
            max_val = 0
            for k in range(min(i//c[j], m)):
                max_val = max(max_val, max_profit(i-c[j], j-1, k) + d[j])
            dp[i][j] = max_val
        else:
            dp[i][j] = dp[i][0]

max_profit = 0
for i in range(m+1):
    max_profit = max(max_profit, dp[n][i])

print(max_profit)

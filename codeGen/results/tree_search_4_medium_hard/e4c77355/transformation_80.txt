===BEGIN PLAN===
If the array is empty, return 0.

Dynamic Programming with Tabulation
For each element in the array:
    For each previous element in the array:
        If current element > previous element:
            Update state (the length of the longest increasing subsequence ending at the current element) to max(state, 1 + state from previous element)
Return the maximum state (the length of the longest increasing subsequence)

===END PLAN===

===BEGIN PLAN===
DP Dynamic Programming
Initialize an array dp where dp[i] will store the length of the longest increasing subsequence ending at index i.
For each element in the input array:
    Initialize max_length = 1 (since a single element is considered as increasing subsequence)
    For each previous element j from start to i-1:
        If the current element is greater than the previous element, it means that the longest increasing subsequence ending at i can be extended by including this new element
        Update max_length if the length of the increasing subsequence ending at j plus 1 (for the new element) is greater than the current max_length
    Store max_length in dp[i]
Return the maximum value from dp array as it will represent the length of the longest increasing subsequence

===END PLAN===

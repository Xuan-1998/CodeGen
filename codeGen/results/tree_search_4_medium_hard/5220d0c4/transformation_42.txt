===BEGIN PLAN===
The optimal substructure is defined by combining the beauty values of non-overlapping subarrays. Consider the maximum beauty value for all possible combinations of good and bad primes. Use memoization to store the beauty values for previously computed subproblems.

The state expression is a tuple (i, j) representing the range [i, j] in the array, where i <= j and Beauty[i][j] represents the maximum beauty value for this range.

Transition:
    maxBeauty[i+1][j] = max(maxBeauty[i][j-1], maxBeauty[i-1][j]) + (isGood(primeFactors[A[i]]) ? 1 : -1)
Use a dictionary to store the beauty values for previously computed subproblems, where the key is the tuple (i, j) and the value is the maximum beauty value for this range.

===END PLAN===

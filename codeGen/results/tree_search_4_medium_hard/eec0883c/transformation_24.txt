def dp(i, j):
    if i == n-1:
        return w[i] - sum(c for u, v, c in roads[:i])
    else:
        max_flow = 0
        for k in range(i+1):
            flow = dp(k, j-c)
            if flow > max_flow:
                max_flow = flow + c
        return max_flow

n = int(input())
w = [int(input()) for _ in range(n)]
roads = []
for _ in range(n-1):
    u, v, c = map(int, input().split())
    roads.append((u, v, c))
print(dp(0, w[0]))

], [
dp[i][0] := 1;
for (j from 1 to m) {
    dp[0][j] := dp[0][j-1] * n;
    for (i from 0 to n-1) {
        if (2*i > n || j == m-1) {
            dp[i][j] := dp[i][j-1];
        } else {
            if (i < n/2 || j > 0) {
                dp[i][j] := dp[2*(i+1)%n][j-1] * n;
            } else {
                sum := 0;
                for (k from max(i, n-i) to min(2*i,n-1) if 2*k<=n) {
                    sum += dp[k][j-1];
                }
                dp[i][j] := sum * n;
            }
        }
    }
}
for (i from 0 to n-1) {
    dp[i][m] := dp[0][m-1] * n;
}
print(dp[0][m]%((10^8+7)));

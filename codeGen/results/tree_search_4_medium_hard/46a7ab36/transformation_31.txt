], [
state = 1; dp[0..n][0..m] filled by transition relationships;
for(int i=1 to n) for(int j=1 to m)
  if(2*i <= n) dp[i-1][j-1] * (n-i+1) + dp[i][j-1]
  else dp[i-1][j-1] * (n-i+1) + dp[n-1][j-1];
state = [n*m]; for(int i=0 to m)
  state += dp[0][i];

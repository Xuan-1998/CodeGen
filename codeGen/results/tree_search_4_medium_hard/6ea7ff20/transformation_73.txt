===BEGIN PLAN===
state dp[2n][n+1] = { 0 if there exist arrays a and b such that merge(a,b) equals permutation up to index i, with array a having length j; else 1 };

Let n be the given integer from input. 
For each test case:
    If p[0] <= p[n], then
        For i in range(n):
            if p[i+n] < p[i]:
                dp[i][j] = 1 (since we can create array a with length j and array b such that merge(a,b) equals permutation up to index i)
            else:
                dp[i][j] = dp[i-1][0] (since there is no way to form an array a of length j that starts at p[n])
        if p[2n-1] < p[n]:
            dp[2n-1][n] = 1
    else: 
        For i in range(n):
            if p[i+n] > p[i]:
                dp[i][j] = 0 (since we cannot create array a of length j that starts at p[n])
            else:
                dp[i][j] = dp[i-1][j+1]
        if p[2n-1] > p[n]:
            dp[2n-1][n] = 1

Print "YES" for each test case where there exist arrays a and b such that merge(a,b) equals permutation, else print "NO".
===END PLAN===

===BEGIN PLAN===
Use a bottom-up approach with dynamic programming by creating a table where each cell represents the count of digit 1's in integers less than or equal to that index. 
Initialize the table with all zeros, then for each integer i from 0 to n:
    For each power p of 10 up to the number of digits in i (inclusive), 
        Add the number of times 1 appears at the pth position in all numbers ending with this power of 10 (which is equal to 10^(p-1) * p) to the count for integer i.
    Update the total count as the sum of the counts for each integer up to n.

This plan avoids the need for memoization and has a time complexity of O(log(n)), which should be efficient enough given the constraints on n. 

===END PLAN===

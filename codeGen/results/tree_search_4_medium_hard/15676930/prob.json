"{\"statement\": \"Task: Given a row of n hares, each with a certain joy value, determine the order in which they should be fed to maximize the total joy. The joy value of each hare depends on whether its adjacent hares have been fed or not.\\n\\nInput: The input consists of an integer n, followed by three lines, each containing n integers. The first line contains integers a_1 a_2 ... a_{n}, where a_i represents the joy value of hare i if both its adjacent hares are hungry. The second line contains integers b_1, b_2, ..., b_{n}, where b_i represents the joy value of hare i if it has exactly one full adjacent hare. The third line contains integers c_1, c_2, ..., c_{n}, where c_i represents the joy value of hare i if both its adjacent hares are full. The input is received from standard input.\\n\\nOutput: The output should be a single integer representing the maximum possible total joy of the hares.\\n\\nConstraints: 1 \\u2264 n \\u2264 3000 and 0 \\u2264 a_{i}, b_{i}, c_{i} \\u2264 10^5.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Greedy algorithms']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/358/D\", \"sample_test_cases\": [{\"input\": \"4\\n1 2 3 4\\n4 3 2 1\\n0 1 1 0\\n\", \"output\": \"13\\n\"}, {\"input\": \"7\\n8 5 7 6 1 8 9\\n2 7 9 5 4 3 1\\n2 3 3 4 1 1 3\\n\", \"output\": \"44\\n\"}, {\"input\": \"3\\n1 1 1\\n1 2 1\\n1 1 1\\n\", \"output\": \"4\\n\"}, {\"input\": \"7\\n1 3 8 9 3 4 4\\n6 0 6 6 1 8 4\\n9 6 3 7 8 8 2\\n\", \"output\": \"42\\n\"}, {\"input\": \"2\\n3 5\\n9 8\\n4 0\\n\", \"output\": \"14\\n\"}, {\"input\": \"7\\n3 6 1 5 4 2 0\\n9 7 3 7 2 6 0\\n1 6 5 7 5 4 1\\n\", \"output\": \"37\\n\"}, {\"input\": \"1\\n0\\n1\\n4\\n\", \"output\": \"0\\n\"}, {\"input\": \"1\\n7\\n1\\n7\\n\", \"output\": \"7\\n\"}, {\"input\": \"8\\n7 3 3 5 9 9 8 1\\n8 2 6 6 0 3 8 0\\n1 2 5 0 9 4 7 8\\n\", \"output\": \"49\\n\"}, {\"input\": \"6\\n1 2 0 1 6 4\\n0 6 1 8 9 8\\n4 1 4 3 9 8\\n\", \"output\": \"33\\n\"}, {\"input\": \"1\\n0\\n0\\n0\\n\", \"output\": \"0\\n\"}, {\"input\": \"1\\n100000\\n100000\\n100000\\n\", \"output\": \"100000\\n\"}, {\"input\": \"1\\n100000\\n100000\\n100000\\n\", \"output\": \"100000\\n\"}, {\"input\": \"1\\n0\\n1\\n4\\n\", \"output\": \"0\\n\"}, {\"input\": \"2\\n3 5\\n9 8\\n4 0\\n\", \"output\": \"14\\n\"}]}"
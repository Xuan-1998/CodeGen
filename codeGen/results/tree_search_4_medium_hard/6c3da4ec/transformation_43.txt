===BEGIN PLAN===
dp = {}
def dp_state(n):
    if n == 1:
        return [(0, 0), (s[0],)]
    elif n == 2:
        return [(i, j) for i in range(2) for j in range(i+1, 2)]

    res = []
    for i in range(n):
        for j in range(i+1, n):
            if (j, i) not in dp:
                or_val = 0
                for k in range(i, j+1):
                    or_val |= 1 << s[k]
                dp[(i, j)] = or_val

            res.append(dp[(i, j)])

    return res


max_or_val = 0
for (start, end) in dp_state(n):
    max_or_val = max(max_or_val, ((1<<n)-1)-(1<<end), start, end)
===END PLAN===

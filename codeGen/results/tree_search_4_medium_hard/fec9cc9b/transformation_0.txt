===BEGIN PLAN===
dp[i][j] = True if array[i...j] is a ladder, False otherwise
Initialize dp with all elements as False
For each query l and r, check if dp[l-1][r-1] is True
If it's True, then the subsegment array[l..r] is a ladder
Else, find the longest non-decreasing subsequence in array[l..r]
Using a bottom-up dynamic programming approach with a 2D array, 
dp[i][j] = True if the subsegment array[i..j] is a ladder, and False otherwise
Create a function to check if an array is a ladder using this dp array
For each query l and r, call this function on the subsegment array[l..r]
If the function returns True, print "Yes", else print "No"
===END PLAN===

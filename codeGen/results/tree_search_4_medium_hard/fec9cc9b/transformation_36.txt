===BEGIN PLAN===
dp[i][j] = (i == 1 or array[i-1] <= array[j]) and j == r - 1, False otherwise
Determine the minimum and maximum values in the subsegment and check if they are increasing/decreasing within that range.
if min_val <= max_val:
    dp[i][j] = True if array[i-1] <= array[r-1] and array[0] <= array[l-1] else False
Apply memoization by using a dictionary to store the results of subproblems and reuse them when needed.
for i in range(1, n+1):
    for j in range(i, n+1):
        dp[i][j] = check_ladder(array, l, r)
check all queries:
for query in queries:
    l, r = query
    if dp[l][r]:
        print("Yes")
    else:
        print("No")
===END PLAN===

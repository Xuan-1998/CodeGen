Define a state as dp[i][j] that represents the maximum length of non-decreasing sequence seen so far in the subsegment [i, j]. Initialize dp[0][n-1] = 1 because there is at least one element.

Use bottom-up tabulation approach to update the dp array. For each subsegment [l, r], calculate the maximum length of non-decreasing sequence seen so far by iterating over all elements in this subsegment and updating the state based on whether the current element is not less than the previous one.

For each query (l, r), check if the subsegment [l, r] is a ladder by checking if the maximum length of non-decreasing sequence seen so far is equal to or greater than the length of the non-increasing sequence seen so far. If it is, then the subsegment is a ladder.

Print "Yes" for each query if the subsegment is a ladder and "No" otherwise.

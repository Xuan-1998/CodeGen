===BEGIN PLAN===
dp[0][j] = True for all j
Define dp[i][j] as true if and only if the subsegment [i..j] is a ladder by checking if it's equal to the longest non-decreasing subsequence found so far, which is stored in dp[0][k] where k is the maximum index such that array[k] <= array[j]
Use dynamic programming to fill in the table
Define a 2D array dp of size (n+1) x (n+1) filled with False, then iterate through each query, updating the values in dp as you go
For each query (l, r), check if dp[l][r] is True and print "Yes" if it is, otherwise print "No"
===END PLAN===

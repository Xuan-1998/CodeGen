===BEGIN PLAN===
Identify the longest non-decreasing subsequence in the array as the base case.
dp[i] = True if array[0:i] is a non-decreasing subsequence, False otherwise
Select dp[i] as a boolean indicating whether array[0:i] is a non-decreasing subsequence.
Transition: dp[i] = dp[i-1] and (array[i-1] <= array[i]) or (dp[i-1] == False) if array[i-1] <= array[i], dp[i] = False otherwise.
Consider using a bottom-up approach with dynamic programming, where dp[i] represents the length of the longest non-decreasing subsequence ending at index i.
Check each query: If the length of the subsegment is equal to the length of the longest non-decreasing subsequence found so far, it's a ladder. Otherwise, it's not a ladder.
Print "Yes" or "No" for each query accordingly.
===END PLAN===

===BEGIN PLAN===
Identify the longest non-decreasing subsequence in the array as the base case.
dp[i] = True if array[0:i] is a non-decreasing subsequence, False otherwise.
Choose dp[i] as the length of the longest non-decreasing subsequence ending at index i.
Transition: dp[i] = max(dp[j]) for all j such that 0 <= j < i and array[j] <= array[i].
Create a bottom-up dynamic programming solution where dp[i] represents the length of the longest non-decreasing subsequence ending at index i.
For each query, check if the current subsegment is equal to the longest non-decreasing subsequence found so far. If it is, print "Yes", otherwise print "No".
Check for edge cases: Ensure that dp[0] = True since an array of length 1 is always a non-decreasing subsequence.
===END PLAN===

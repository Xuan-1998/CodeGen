===BEGIN PLAN===
Determine the maximum sum of a path by iterating through all possible paths in the tree using dynamic programming (not tabulation), and identify the optimal solution.

The state expression is dp[i], representing the maximum sum of a path ending at node i. dp[i] captures the maximum sum of a path from node i to any leaf node, and update it by adding the value at each step.

Implement an iterative solution with memoization by maintaining an array dp where index is node and value is the maximum sum of a path ending at that node.
Initialize dp[0] as the value of the root node.
For each node i in the tree:
    If i is a leaf node, set dp[i] to its value
    Otherwise, calculate dp[i] as the maximum sum of a path ending at the left child and right child, plus the value of the current node
Return the maximum value in dp[]

===END PLAN===

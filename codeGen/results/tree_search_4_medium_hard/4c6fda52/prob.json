"{\"statement\": \"Task: Given a string $s$ of length $n$ consisting of characters 'R', 'G', and 'B', and an integer $k$, find the minimum number of characters that need to be changed in $s$ so that a substring of length $k$ can be found in $s$ and also in an infinite string of \\\"RGBRGBRGB...\\\".\\n\\nInput: The input consists of multiple queries. The first line of each query contains two integers, $n$ and $k$. The second line of each query contains a string $s$ of length $n$ consisting of characters 'R', 'G', and 'B'. The sum of $n$ over all queries does not exceed $2 \\\\cdot 10^5$. Input is read from standard input.\\n\\nOutput: For each query, output a single integer representing the minimum number of characters that need to be changed in $s$ so that a substring of length $k$ can be found in $s$ and also in an infinite string of \\\"RGBRGBRGB...\\\". Output is written to standard output.\\n\\nConstraints: $1 \\\\leq q \\\\leq 2 \\\\cdot 10^5$, $1 \\\\leq k \\\\leq n \\\\leq 2 \\\\cdot 10^5$, $\\\\sum n \\\\leq 2 \\\\cdot 10^5$.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Amortized analysis', 'Data structures', 'Implementation']\", \"difficulties\": \"MEDIUM_HARD\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/1196/D2\", \"sample_test_cases\": [{\"input\": \"3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\\n\", \"output\": \"1\\n0\\n3\\n\"}, {\"input\": \"3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBRBR\\n\", \"output\": \"1\\n0\\n2\\n\"}, {\"input\": \"3\\n5 3\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\\n\", \"output\": \"1\\n0\\n3\\n\"}, {\"input\": \"3\\n5 2\\nBGGGG\\n5 4\\nRBRGR\\n5 5\\nBBRBR\\n\", \"output\": \"1\\n1\\n2\\n\"}, {\"input\": \"3\\n5 3\\nBGGGG\\n5 3\\nRBRGR\\n5 2\\nBBBRR\\n\", \"output\": \"1\\n0\\n0\\n\"}, {\"input\": \"3\\n5 2\\nBGGGG\\n5 4\\nRBRGR\\n5 5\\nBRBRB\\n\", \"output\": \"1\\n1\\n3\\n\"}, {\"input\": \"3\\n5 1\\nBGGGG\\n5 2\\nRBRGR\\n5 5\\nBBRBR\\n\", \"output\": \"0\\n0\\n2\\n\"}, {\"input\": \"3\\n5 1\\nBGGGG\\n5 4\\nRBRGR\\n5 5\\nBBRBR\\n\", \"output\": \"0\\n1\\n2\\n\"}, {\"input\": \"3\\n5 3\\nBGGGG\\n5 5\\nRBRGR\\n5 5\\nBBBRR\\n\", \"output\": \"1\\n2\\n3\\n\"}, {\"input\": \"3\\n5 4\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBRBRB\\n\", \"output\": \"2\\n0\\n3\\n\"}, {\"input\": \"3\\n5 4\\nBGGGG\\n5 1\\nRBRGR\\n5 2\\nBBBRR\\n\", \"output\": \"2\\n0\\n0\\n\"}, {\"input\": \"3\\n5 2\\nGGGGB\\n5 4\\nRGRBR\\n5 5\\nBRBRB\\n\", \"output\": \"0\\n2\\n3\\n\"}, {\"input\": \"3\\n5 2\\nBGGGG\\n5 4\\nRGRBR\\n5 5\\nRBRBB\\n\", \"output\": \"1\\n2\\n2\\n\"}, {\"input\": \"3\\n5 2\\nGGGGB\\n5 5\\nRGRBR\\n5 5\\nBRBRB\\n\", \"output\": \"0\\n3\\n3\\n\"}, {\"input\": \"3\\n5 4\\nBGGGG\\n5 4\\nRBRGR\\n5 5\\nBBRBR\\n\", \"output\": \"2\\n1\\n2\\n\"}]}"
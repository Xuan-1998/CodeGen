===BEGIN PLAN===
To identify overlapping subproblems, consider counting the number of blocks ending at each digit position.

Choose a state for each digit position, i.e., the number of blocks that end at that position with length 1 to n.

For a given digit, consider all possible extensions to the left or right that maintain the same block structure and update the corresponding state accordingly.

Let dp[i][j] be the number of blocks that end at position i with length j.
The base case is when j = 1; in this case, dp[i][1] represents the number of blocks ending at position i with a single digit.

To fill up the table, iterate from j = 2 to n. For each j, update dp[i][j] by considering all possible extensions to the left or right that maintain the same block structure.
For example, if the current digit is k, and there are p blocks ending at position i-1 with length j-1 (i.e., dp[i-1][j-1] = p), update dp[i][j] by adding p * 10^l to the previous value, where l is the number of leading zeroes.
This accounts for all possible extensions to the left that maintain the same block structure.

Similarly, update dp[i][j] by considering all possible extensions to the right that maintain the same block structure. For example, if the current digit is k, and there are q blocks ending at position i+1 with length j-1 (i.e., dp[i+1][j-1] = q), add q * 10^r to the previous value, where r is the number of trailing zeroes.
This accounts for all possible extensions to the right that maintain the same block structure.

Finally, sum up the values in each row of the table and take the modulus with 998244353 as the output.

===END PLAN===

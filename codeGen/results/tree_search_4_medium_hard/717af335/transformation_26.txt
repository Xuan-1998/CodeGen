===BEGIN PLAN===
The base case could be when A or B is 0, in which case X would just be the other value.

State: (A, B), dp[(i, j)] represents whether there exists a solution for A - i and B - j.

Transition relationship:
    if i > 0 or j > min(A, B): return False; else: return True

dp = [[False] * (B + 1) for _ in range(A + 1)]; 
for i in range(A + 1):
    for j in range(B + 1):
        if i == 0 or j == 0: dp[i][j] = True; 
        else:
            if i > 0 and j <= min(0, A - j): dp[i][j] = True
            elif j > 0 and i <= min(A, B - i): dp[i][j] = True
            else: dp[i][j] = False

X, Y = 0, B; 
for i in range(A + 1):
    for j in range(B + 1):
        if dp[i][j]: X, Y = i, j; break; 

if (A != X + Y) or (B != X ^ Y): print(-1); 
else: print(X, ' ', Y)

===END PLAN===

===BEGIN PLAN===
Consider a dynamic programming solution where you build up a table of valid polygon configurations from left to right, using the current knight's mood as input for each configuration.

State expression is a tuple (mood_sum, k_count), where mood_sum is the sum of all knights' moods seen so far and k_count is the count of good moods.
State: (k_count, mood_sum)
Transition:
    1. If k_count == n/2 and mood_sum % 2 == 0, then YES;
    2. Else NO
Apply memoization using a dictionary to store the intermediate results and avoid redundant computations.

===END PLAN===

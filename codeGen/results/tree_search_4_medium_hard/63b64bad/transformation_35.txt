===BEGIN PLAN===
You could model the problem as a graph where nodes represent states and edges represent transitions; then use memoization to avoid repeating calculations.

The base case occurs when x ≤ 0 or x > n, indicating that the program has terminated.

In each step, consider the current state (x, y) as a node in a graph. Nodes with x ≤ 0 or x > n are terminal nodes representing termination. Edges represent transitions from one state to another based on the sequence values.

Use dynamic programming to build up solutions for smaller subproblems and use them to solve larger problems by maintaining a memoization table that keeps track of previously calculated results.

Model the problem as a recursive function that calculates the maximum value of y for each state (x, y), with base cases for termination, and then update the memoization table accordingly.

===END PLAN===

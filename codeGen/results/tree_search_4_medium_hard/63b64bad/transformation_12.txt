===BEGIN PLAN===
Create a 2D table dp[][] of size (n+1) x (10^9 + 1) and fill it using nested loops as follows:
state: (x, y, prev_a), where prev_a is the last element in the sequence
Initialize dp[0][0] = 0
Fill dp[i][j] for i from 2 to n and j from 1 to 10^9 + 1:
    if a_i = j:
        dp[i][j] = max(dp[i-1][j], (dp[i-1][j-a_i] + a_i) % 10^9 + 1)
    else:
        dp[i][j] = min(dp[i-1][j], dp[i-1][a_i])
Print the final value of y in dp[n-1][j]
===END PLAN===

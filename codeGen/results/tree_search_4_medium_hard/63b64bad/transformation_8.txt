===BEGIN PLAN===
Identify that each subproblem (sequence length) has overlapping subproblems, so we can use dynamic programming to solve this problem efficiently.

The state expression is y and the base case is when x = 0 (program terminates).

State: i where i is the number of steps performed so far; Transition:
    * If x ≤ 0 or x > n, then terminate the program (y)
    * Else, update x by a[x] and y by a[x], then increment both
A bottom-up dynamic programming approach using a table to store the results of subproblems. Initialize a table with size (n+1) × (10^9 + 2), where n is the sequence length.
Fill in the table row by row, starting from x = 1 and y = 0. For each cell, check if x ≤ 0 or x > n; if so, terminate the program (y). If not, update x and y as described above.

===END PLAN===

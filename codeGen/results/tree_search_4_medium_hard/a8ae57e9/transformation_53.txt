===BEGIN PLAN===
dp = [[0 for _ in range(k+1)] for _ in range(n+1)]
for i in range(1, n+1):
    for j in range(1, min(i, k)+1):
        dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + ri * min(k, ci)
for i in range(1, n+1):
    for j in range(1, k+1):
        if pi <= ri and ci <= k:
            dp[i][j] = max(dp[i][j], pi)
dp[n][k]
accepted_requests = 0
total_money = 0
for i in range(n, 0, -1):
    for j in range(k, 0, -1):
        if dp[i][j] > dp[i-1][j]:
            accepted_requests += 1
            total_money += ri * min(k, ci)
            print(i, j)
return accepted_requests, total_money
===END PLAN===

===BEGIN PLAN===
Identify that each city's shortest distance from capital can be found independently by performing BFS from the city, which leads to a bottom-up approach with tabulation.
Define the state expression as an integer array representing the number of reversed edges needed to reach each city from the capital.
A bottom-up approach with tabulation could involve initializing a 1D array dp of size n, where dp[i] represents the minimum number of reversed edges needed to reach city i from the capital.
Use dynamic programming to fill up the dp array in a bottom-up manner:
    Iterate through cities: for each city j
        For each neighbor k of city j that is not the capital
            Update dp[j] based on whether city k can be reached with 0 or more reversed edges from city j
    Calculate the minimum number of reversed edges needed to reach any other city from the capital by finding the maximum value in dp
===END PLAN===

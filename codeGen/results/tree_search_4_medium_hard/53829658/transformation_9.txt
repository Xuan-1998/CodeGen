===BEGIN PLAN===
Maintain an array dp of size n, where dp[i] is true if city i can be reached from the capital by reversing at most i-1 edges.
Define a boolean array reachable of size n, representing whether each city is reachable from the capital with 0 or more reversed edges.
Perform DFS/BFS from the capital to fill up the reachable array.
For each city i, calculate dp[i] as true if there exists a path from the capital to city i by reversing at most i-1 edges in the directed tree.
Maintain an integer min_edges such that it holds the minimum number of reversed edges required to reach any other city from the capital.
Finally, print out the minimum number of edges need to be reversed (min_edges) and all possible ways to choose the capital as the sequence of indexes of cities in increasing order.
===END PLAN===

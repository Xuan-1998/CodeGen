===BEGIN PLAN===
Observe that the optimal capital city would be the one with the maximum in-degree, which can be found by simply iterating through each city and keeping track of its in-degree.

The state expression is dp[i][j] = minimum number of reversed roads needed to reach city j from city i, with base case being dp[1][i] = 0 for all i. This choice focuses on finding the minimum number of reversed roads for each pair of cities.

dp[i][j] is updated as min(dp[k][j] + 1) where k is such that there's an edge from city i to city k.

You can use a 2D array dp with dimensions n*n, where dp[i][j] represents the minimum number of reversed roads needed to reach city j from city i. 

For each pair of cities (i, j), calculate the minimum number of reversed roads by iterating through all cities k such that there's an edge from city i to city k. Update dp[i][j] as the minimum value.

The correct capital city is then the one with the maximum in-degree.

===END PLAN===

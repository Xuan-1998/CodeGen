===BEGIN PLAN===
dp[i]: minimum sum of marks below water level on day i
where dp[i] depends on dp[j] for all j < i

1. Initialize an array dp of size n+1 with all elements set to infinity
2. Fill dp iteratively from left to right:
   - For each day i, calculate dp[i] as the minimum sum of marks below water level on day i
     - This can be done by considering the number of marks strictly above the water level on previous days (i-1)
     - Calculate dp[i] = dp[i-1] + (n-i) // This is where your intuition about the problem being a dynamic programming problem comes into play!
3. Use memoization to store previously computed values

===END PLAN===

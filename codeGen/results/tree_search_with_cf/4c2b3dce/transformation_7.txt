
1. Initialize variables to track the first occurrence of subsequences "AB" and "BA".
2. Iterate through the string to find non-overlapping subsequences:
    a. Initialize two boolean variables `found_AB` and `found_BA` to False.
    b. Initialize two integer variables `index_AB` and `index_BA` to -1 to store the indices of the first occurrences of "AB" and "BA".
    c. Iterate through the string from left to right:
        i. If "AB" is found and `found_AB` is False, set `found_AB` to True and store the index in `index_AB`.
        ii. If "BA" is found and `found_BA` is False, set `found_BA` to True and store the index in `index_BA`.
        iii. If both `found_AB` and `found_BA` are True, check if the indices are non-overlapping. If they are, return "YES".
3. If the loop completes and non-overlapping subsequences are not found, return "NO".
4. Edge cases:
    a. If the string length is less than 4, directly return "NO" as it is impossible to have non-overlapping "AB" and "BA".
    b. Ensure that the subsequences are non-overlapping by checking the indices.


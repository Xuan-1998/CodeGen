
1. Define two boolean flags, found_AB and found_BA, to track whether the subsequences 'AB' and 'BA' have been found.
2. Iterate through the string s from the beginning to the end.
3. During the iteration, check for the subsequence 'AB':
    a. If 'AB' is found and found_BA is already True, return "YES" immediately.
    b. If 'AB' is found and found_BA is False, set found_AB to True and skip the next character to avoid overlapping.
4. Similarly, check for the subsequence 'BA':
    a. If 'BA' is found and found_AB is already True, return "YES" immediately.
    b. If 'BA' is found and found_AB is False, set found_BA to True and skip the next character to avoid overlapping.
5. If the loop completes without finding both subsequences, return "NO".
6. Time complexity: O(n), space complexity: O(1).


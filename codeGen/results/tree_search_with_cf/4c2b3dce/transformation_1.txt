
1. Linear Scan with Two Pointers: This approach involves scanning the string linearly while maintaining two pointers to track the positions of the subsequences 'AB' and 'BA'. Time complexity: O(n), space complexity: O(1).
2. Initialize two flags: `found_AB` and `found_BA` to False. These flags will help track whether we have found the subsequences 'AB' and 'BA' respectively.
3. First Pass - Find 'AB': Iterate through the string from the start to the second last character. If 'AB' is found, set `found_AB` to True and mark the position just after 'AB' as the start for the next search.
4. Second Pass - Find 'BA' after 'AB': Continue iterating from the marked position. If 'BA' is found, set `found_BA` to True and break the loop.
5. If both `found_AB` and `found_BA` are True, print "YES" and terminate.
6. Reset the flags `found_AB` and `found_BA` to False.
7. First Pass - Find 'BA': Iterate through the string from the start to the second last character. If 'BA' is found, set `found_BA` to True and mark the position just after 'BA' as the start for the next search.
8. Second Pass - Find 'AB' after 'BA': Continue iterating from the marked position. If 'AB' is found, set `found_AB` to True and break the loop.
9. If both `found_AB` and `found_BA` are True, print "YES" and terminate.
10. If neither combination of 'AB' and 'BA' is found, print "NO".


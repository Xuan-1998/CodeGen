"{\"statement\": \"Task: Given a string s, determine whether it contains two distinct non-overlapping subsequences \\\"AB\\\" and \\\"BA\\\" in any order.\\n\\nInput: The input consists of a single string s of length n (1 \\u2264 n \\u2264 10^5) composed of uppercase Latin letters, provided via standard input.\\n\\nOutput: The output should be a string, either \\\"YES\\\" if s contains two non-overlapping subsequences \\\"AB\\\" and \\\"BA\\\" in any order, or \\\"NO\\\" otherwise. The output should be provided via standard output.\\n\\nConstraints: The string s consists only of uppercase Latin letters. The length of the string is between 1 and 10^5 inclusive. The subsequences \\\"AB\\\" and \\\"BA\\\" should not overlap in the string.\", \"editorial\": \"\", \"tag\": \"['String algorithms', 'Implementation', 'Greedy algorithms', 'Complete search', 'Dynamic programming']\", \"difficulties\": \"MEDIUM\", \"source\": \"codeforces\", \"url\": \"https://codeforces.com/problemset/problem/550/A\", \"sample_test_cases\": [{\"input\": \"ABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BACFAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AXBYBXA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABABAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BBBBBBBBBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABAXXXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"TESTABAXXABTEST\\n\", \"output\": \"YES\\n\"}, {\"input\": \"A\\n\", \"output\": \"NO\\n\"}, {\"input\": \"B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"X\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AXBXBXA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"SKDSKDJABSDBADKFJDK\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABAXXBBXXAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BBAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BABAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABABA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AAABAAACBBBC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AABBBACBBBBBBAACBCCACBBAABBBBBCAACABAACABCACCBCBCCCBCBCABCBBCCBCBBAACBACAABACBBCACCBCCACCABBCBABBAAC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CBBABDDBBADAC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABYFAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BABXXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABAXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABABXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABXABXABXABXABXBAXBAXBAXBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"QQQQQQQQQABABQQQQQQQQ\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABABA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BABAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AABBBACBBBBBBAACBCCACBBAABBBBBCAACABAACABCACCBCBCCCBCBCABCBBCCBCBBAACBACAABACBBCACCBCCACCABBCBABBAAC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BABXXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AAABAAACBBBC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABYFAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"QQQQQQQQQABABQQQQQQQQ\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CBBABDDBBADAC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBBBBBBBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAXXXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"TESTABAXXABTEST\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"X\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAXXBBXXAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"SKDSKDJABSDBADKFJDK\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABAXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABABAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABXABXABXABXABXBAXBAXBAXBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AXBXBXA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABABXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CAABBABCBBACCACCBCCACBBCABAACABCAABBCBCCBBCBACBCBCCCBCBCCACBACAABACAACBBBBBAABBCACCBCAABBBBBBCABBBAA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAXXBAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AAABAABCBBBC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AA@B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABYGAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AACB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@BA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A@A\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@BAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CAAB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@AB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CADABBDDBABBC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BAB@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A@BA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABBBBBBBBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAXYXAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BB@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBBC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAA@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"TSETBAXXABATSET\\n\", \"output\": \"YES\\n\"}, {\"input\": \"B@AA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BCBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"W\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BABC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"C\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@AAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAXXBBXXABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"KDJFKDABDSBAJDKSDKS\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABABAC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"ABXABXABXABXBAXBAXBAXBAXBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BXBXBXA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@ABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BA@B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAXBABA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AB@A\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ACA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AXBXBX@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAFCAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BAAC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABAAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CAACBABCBBACCACCBCCACBBCABAACABCAABBCBCCBBCBACBCBCCCBCBCCACBACAABACAACBBBBBAABBCACCBCAABBBBBBCABBBAA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BAWXBAB\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CBBBCBAABAAA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AAB@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABYGBB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BCAA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AB@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"B@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@@A\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@BBA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"CAAC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"DC\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BA@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"C@DABBDDBABBC\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BAB?\\n\", \"output\": \"NO\\n\"}, {\"input\": \"?\\n\", \"output\": \"NO\\n\"}, {\"input\": \"B@BA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABBBBBBBCB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAXYXABA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"@BB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBCB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BAA?\\n\", \"output\": \"NO\\n\"}, {\"input\": \"TSETBAXXBAATSET\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A@AA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BBCA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"V\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BACC\\n\", \"output\": \"NO\\n\"}, {\"input\": \">\\n\", \"output\": \"NO\\n\"}, {\"input\": \"@ABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AAXXCBXXABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"RKDSKDJABSDBADKFJDK\\n\", \"output\": \"YES\\n\"}, {\"input\": \"CABABA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"AAXABXABXABXBAXBAXBAXBAXBA\\n\", \"output\": \"YES\\n\"}, {\"input\": \"BXBXBXB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A@@\\n\", \"output\": \"NO\\n\"}, {\"input\": \"?ABB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"B@AB\\n\", \"output\": \"NO\\n\"}, {\"input\": \"A@C\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AB@B\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BCA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"ABA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"AXBYBXA\\n\", \"output\": \"NO\\n\"}, {\"input\": \"BACFAB\\n\", \"output\": \"YES\\n\"}]}"
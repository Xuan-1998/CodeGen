
===BEGIN PLAN===
1. **Initialization**:
   - Read the input values for n and k.
   - Read the edges of the tree and construct the adjacency list representation of the tree.
   
2. **Dynamic Programming Table**:
   - Define a DP table `dp[u][d]` where `dp[u][d]` represents the number of vertices at distance `d` from vertex `u`.
   - Initialize the base case: `dp[u][0] = 1` for all vertices `u`, as each vertex is at distance 0 from itself.
   
3. **DFS Traversal**:
   - Perform a Depth-First Search (DFS) traversal of the tree to fill in the DP table.
   - For each vertex `u` and its child `v`, update the DP table using the state transition: 
     

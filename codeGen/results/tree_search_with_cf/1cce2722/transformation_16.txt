
1. Frequency Count: First, count the frequency of each integer in the sequence. This can be done using an array `count` where `count[x]` represents the frequency of the integer `x` in the sequence.
2. Initialize DP Array: Create a DP array `dp` where `dp[x]` will store the maximum points that can be obtained considering all integers from 1 to x.
3. Base Cases: Initialize `dp[0] = 0` (since no points can be earned from 0) and `dp[1] = count[1]` (since the only option is to take all 1s).
4. State Transition: For each integer `x` from 2 to the maximum integer in the sequence:
   - Update `dp[x]` using the relation `dp[x] = max(dp[x-1], dp[x-2] + count[x] * x)`.
5. Result: The value `dp[max_int]` (where `max_int` is the maximum integer in the sequence) will contain the maximum points that can be obtained.


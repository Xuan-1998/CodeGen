
1. Count Frequencies: Create an array `count` where `count[x]` represents the number of occurrences of the integer `x` in the sequence. This can be done in O(n) time.
2. Initialize DP Array: Create a DP array `dp` where `dp[x]` represents the maximum points that can be obtained considering numbers up to `x` in the sequence. Initialize `dp[0] = 0` and `dp[1] = count[1]`.
3. DP Transition: For each number `x` from 2 to the maximum value in the sequence (105), update `dp[x]` using the relationship: `dp[x] = max(dp[x-1], dp[x-2] + x * count[x])`. This ensures that we either skip the integer `x` or take all occurrences of `x` and add `x * count[x]` to the result.
4. Result: The maximum points that can be obtained is stored in `dp[max_value]` where `max_value` is the maximum integer in the sequence.


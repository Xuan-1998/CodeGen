
1. Define the state dp[i][j] to represent the number of ways to form a subtree with i vertices and j good vertices. Initialize the base case: dp[0][0] = 1, meaning there's one way to form an empty subtree with zero vertices and zero good vertices.
2. Iterate over the number of vertices from 1 to N. For each vertex, iterate over the possible number of good vertices from 0 to N.
3. For each vertex i, calculate the number of ways to form a subtree with i vertices and j good vertices by considering the out-degree d_i.
4. Use a nested loop to iterate through the possible out-degrees and update the dp table accordingly.
5. Ensure that the sum of out-degrees equals N-1, as this is a necessary condition for forming a valid tree.
6. After filling the dp table, sum up the values of dp[N][j] for all j to get the total number of good vertices for all good trees.
7. Output the result modulo 998244353.



1. Define the DP state: Let dp[i][j] represent the number of ways to construct a tree with i nodes and j good vertices.
2. Initialize the DP table: dp[0][0] = 1, as there is one way to construct a tree with 0 nodes and 0 good vertices.
3. Iterate through the nodes from 1 to N:
    a. For each node i, iterate through the possible number of good vertices j from 0 to i:
        i. Compute the number of ways to distribute the remaining nodes among its children.
        ii. Update dp[i][j] by summing the contributions from subtrees rooted at various nodes.
4. Consider the constraints: Ensure that the out-degree of vertex i matches d_i.
5. Sum the number of good vertices for all good trees.
6. Return the result modulo 998244353.


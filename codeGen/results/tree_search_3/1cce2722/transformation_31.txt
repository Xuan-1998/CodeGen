===BEGIN PLAN===
Instead, opt for a bottom-up approach where you tabulate the maximum points that can be earned by deleting elements from subsequences, filling in the table row by row or column by column.

Define dp[i][0] and dp[i][i] as base cases: dp[0][k] = 0 for all k, and dp[i][i] = i for all i. The state expression can be dp[i][k].

dp[i][j] can be calculated by considering two options: delete the current element ak = j, or don't. If we choose not to delete it, then the maximum points that can be earned from the remaining elements is dp[i-1][j], and if we do delete it, then we earn i points and recursively calculate the maximum points that can be earned from the remaining elements.

for i in range(2, n): for k in range(1, i+1): dp[i][k] += max(dp[i-1][max(0, k-1)], i - k);

===END PLAN===

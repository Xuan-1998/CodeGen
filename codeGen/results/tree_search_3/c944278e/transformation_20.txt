===BEGIN PLAN===
Choose dynamic programming by identifying overlapping subproblems related to the number of teams, where each team's skill level is considered as a 'state'.
The state expression could be dp[j][i] representing whether team j has won by round i.
Dynamic programming by identifying overlapping subproblems related to the number of teams, where each team's skill level is considered as a 'state'. The state expression could be dp[j][i] representing whether team j has won by round i.
The state expression could be dp[j][i] representing whether team j has won by round i. You can use this expression as the basis for dynamic programming.

===END PLAN===

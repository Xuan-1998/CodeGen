===BEGIN PLAN===
Determine the longest common prefix between 'AB' and 'BA', let's call it prefix. Then check if the string s contains both prefix + 'A' and prefix + 'B'. If yes, then return "YES", otherwise return "NO".

dp[i][j] is a boolean indicating whether the substring s[0:i] contains the substring 'AB' (if j=0) or 'BA' (if j=1).
dp[i][j] is True if and only if s[0:i-1] contains 'AB' (if j=0) or 'BA' (if j=1).

Create a set of all occurrences of 'AB' in the string. Then check if this set has at least two elements. If yes, then return "YES", otherwise return "NO".

Check for edge cases: 
- The string is empty.
- The string contains only one character.

===END PLAN===

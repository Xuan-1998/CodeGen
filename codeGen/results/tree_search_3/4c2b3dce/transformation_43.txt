===BEGIN PLAN===
Check if the string can be divided into two non-overlapping parts, each containing one of 'A' or 'B', and then check if these parts contain the required substrings.
The state is a tuple containing the counts of 'A' and 'B' in the current substring, as well as a flag indicating whether 'AB' has been found yet.

Transition relationship: 
  - If s[0...i] contains 'AB' or 'BA', then 
    * state at i+1 is either (1, 0) or (0, 1), depending on whether 'A' or 'B' appears first; 
    * update the flag to indicate that the required substrings have been found.
  - Otherwise, the state remains unchanged.

Implement a sliding window approach using two pointers start and end to keep track of the current substring. As you move the window, update the counts of 'A' and 'B' in the current substring. 
If the flag is set to indicate that the required substrings have been found, return "YES". Otherwise, continue moving the window until the end of the string has been reached. If no substrings are found, return "NO".

===END PLAN===

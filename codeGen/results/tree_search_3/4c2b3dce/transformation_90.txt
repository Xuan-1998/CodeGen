===BEGIN PLAN===
Are there any specific characters or patterns in the input string that could help us solve the problem efficiently?

Considering the presence of 'A' and 'B' in the string, we could define a state as: {bool['A' appears before 'B'], bool['AB' or 'BA' appear consecutively]},
States could represent the last character seen, with transitions updating this state based on whether the current character matches the expected next one in 'AB' or 'BA'
Use a boolean array to keep track of whether each substring has been checked for containing 'AB' and 'BA'. Iterate through the string, updating the state based on whether the current character is 'A' or 'B'.

===END PLAN===

===BEGIN PLAN===
Can we use a sliding window approach to check if the string contains both 'AB' and 'BA' without any overlap?

* Yes, this is a good direction. We can maintain two pointers i and j, one starting from the beginning of the string and the other from the end.
* Initialize a flag to track whether we have found both substrings.

Maintain two pointers i and j, one starting from the beginning of the string and the other from the end. Try to form the substrings 'AB' and 'BA' without any overlap
* Start by moving the pointer from the beginning (i) forward until we find the substring 'AB'. This will ensure that the remaining part of the string does not contain 'AB'.
* Now, start moving the pointer from the end (j) backward until we find the substring 'BA'. This will ensure that the remaining part of the string does not contain 'BA'.
* If we can form both substrings without any overlap, then return "YES".
* If we cannot form either substring, then return "NO".

===END PLAN===

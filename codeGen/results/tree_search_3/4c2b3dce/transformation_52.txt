// Initialize dp arrays to store the states for 'A's and 'B's
dp1 = [0] * (max_len + 1)
dp2 = [False] * (max_len + 1)

for i in range(1, max_len + 1):
    // Check if current position is an odd or even index
    dp2[i] = (i % 2 != 0) || (!dp2[i - 1])

    // Iterate over the remaining characters to find 'AB' and 'BA'
    for j in range(i, max_len + 1):
        // Check if current position is at the start of either 'AB' or 'BA'
        dp1[j] = (j >= i) && (!dp2[i - 1]) && ((j % 2 == 0) || (dp1[i - 1]))

    // Update state for the next character
    dp2[i] = dp2[i] && dp1[i]

// Print the result based on the final state of 'A's and 'B's
print(dp2[max_len])

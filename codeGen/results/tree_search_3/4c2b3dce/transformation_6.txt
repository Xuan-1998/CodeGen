===BEGIN PLAN===
Check if the string contains 'AB' or 'BA' as a substring, then check for the remaining part of the string.
The state expression is whether the last character in the current prefix is 'A' or 'B', and the base case is when the entire string has been processed.
Define a state as a binary number where 0 represents 'A' not encountered yet, and 1 represents 'B' not encountered yet. 
Transition from this state to the next by flipping the corresponding bit for each character in the string.
Maintain two sets: one for 'AB' substrings and another for 'BA' substrings.
For each prefix of the input string:
    If the last character is 'A', add the current prefix to the set for 'AB' substrings if it's not already there, 
      or add the reverse of the current prefix to the set for 'BA' substrings if it's not already there.
    If the last character is 'B', do the same as above but swap the sets.
Check if any substring in either set is equal to 'AB' or 'BA'. If found, print "YES", otherwise print "NO".
===END PLAN===

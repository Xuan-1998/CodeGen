===BEGIN PLAN===
Determine if either "AB" or "BA" appears in the string s.
    Create two boolean variables: abAppears and baAppears, both initially set to False.

dp[i][j] is a boolean indicating whether the substring s[0:i] contains the substring 'AB' (if j=0) or 'BA' (if j=1).
Create a 2D array to store dynamic programming values with dimensions (len(s), 2)
    Initialize all dp[i][j] values to False.

for i from 0 to len(s):
    for j in range(2):
        if i < 2 and s[i:j+1] in ['AB', 'BA']:
            dp[i][j] = True
        elif i >= 2:
            if j == 0:  # checking for 'AB'
                if dp[i-1][0] and s[i-1] != 'A':  # last char was not 'A' and we didn't find 'AB' earlier
                    dp[i][j] = True
            elif j == 1:  # checking for 'BA'
                if dp[i-1][1] and s[i-1] != 'B':  # last char was not 'B' and we didn't find 'BA' earlier
                    dp[i][j] = True

print("YES" if abAppears or baAppears else "NO")
===END PLAN===

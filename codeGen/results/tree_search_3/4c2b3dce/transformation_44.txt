===BEGIN PLAN===
Check if the string can be divided into two non-overlapping parts, each containing one of 'A' or 'B', and then check if these parts contain the required substrings.

State is a tuple containing the counts of 'A' and 'B' in the current substring, as well as a flag indicating whether 'AB' has been found yet.
Initialize state to (0, 0, False).

For each character c in s:
    If c is 'A', increment A count; if c is 'B', increment B count.
    If counts are both 1 and AB has not been found yet, set flag to True.

Check for a sliding window of size 2 where you keep track of counts of A and B, updating these counts as you slide along the string:
    Initialize window state to (0, 0).
    For each character c in s:
        If c is 'A', increment A count; if c is 'B', increment B count.
        If counts are both 1, return "YES".
        If counts are both 0 and AB has been found yet, return "NO".

Return "YES" if the flag is True, or "NO" otherwise.

===END PLAN===

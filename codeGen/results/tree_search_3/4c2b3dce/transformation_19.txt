===BEGIN PLAN===
Determine the longest common prefix between 'AB' and 'BA', and then check if it appears in the string as a substring.

state: dp[s.index('A') + 1: s.index('B')]
choice: find the longest prefix of 'AB' that also appears in 'BA', then check if this prefix appears as a substring in the original string.

dp[i][j] = 
    (s[i] == s[len('AB') - 1 - j] and
    all(s[i+k:] not in ('B' + 'A'[i+2-k:], 'A' + 'B'[i+2-k:]) for k in range(min(len('AB') - i, len('BA') - i)))) or 
    dp[i-1][j-1]

if (s.find('AB') == -1 and s.find('BA') == -1):
    print("NO")
else:
    print("YES")

===END PLAN===

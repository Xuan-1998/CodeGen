===BEGIN PLAN===
Check if the string can be divided into two non-overlapping parts, each containing one of 'A' or 'B', and then check if these parts contain the required substrings.

States:
- Even/Odd counts for 'A's and 'B's seen so far
- Odd/Even index to track whether current position is at start of one substring, end of other, or in between

Determine states based on:
- If at start of 'AB', increment even count and reset odd count; if at end of 'BA', decrement even count and increment odd count
- In between: update counts based on the character seen (A/B)

Use dynamic programming to build up table of whether each prefix can be divided into two non-overlapping parts, each containing one of 'A' or 'B'

===END PLAN===

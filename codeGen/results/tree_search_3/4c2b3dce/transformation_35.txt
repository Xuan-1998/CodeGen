===BEGIN PLAN===
Check if the string can be divided into two non-overlapping parts, each containing one of 'A' or 'B', and then check if these parts contain the required substrings.

The state is a boolean indicating whether the current substring contains 'AB' or not.
'State is the current substring, and transition is adding a new character to it.'

Initialize the table with base cases: The first row represents the empty string. Initialize this to False, since no substrings can be found in an empty string.

Transition function:
- If the new character is 'A' or 'B', update the state accordingly.
- If the new character is not 'A' nor 'B', just copy the previous state.

Fill in the rest of the cells using the transition function. For each cell, consider all possible previous substrings and their corresponding states.

Check if either "AB" or "BA" appears in the string s. This can be done by iterating over the string, checking for the occurrence of 'AB' or 'BA', and updating a flag accordingly.

Finally, return "YES" if the flag is True, and "NO" otherwise.
===END PLAN===

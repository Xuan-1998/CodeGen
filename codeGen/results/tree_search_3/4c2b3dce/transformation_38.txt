===BEGIN PLAN===
Check if the string can be divided into two non-overlapping parts, each containing one of 'A' or 'B', and then check if these parts contain the required substrings.

State: (a, b) where a is the count of 'A', b is the count of 'B', and both are non-negative integers. Initialize a 2D array dp with size (n+1) x 3 where n is the length of the string. The three possible states in the last column represent:
- (0, 0) - not found yet
- (1, 0) - 'A' has been found but not 'B'
- (0, 1) - 'B' has been found but not 'A'

Then iterate over the string from left to right. For each character c:
- If c is 'A', try to find 'AB' or 'BA' in the remaining part of the string and update dp accordingly.
- If c is 'B', try to find 'AB' or 'BA' in the remaining part of the string and update dp accordingly.

Finally, check if there's a state (1, 1) in the last row of the array. If so, return "YES", otherwise return "NO".
===END PLAN===

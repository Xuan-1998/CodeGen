===BEGIN PLAN===
dp[i] = max(dp[i-1], dp[k] + (k-i) for k in range(i))
    . If i is the first index, dp[0] should be initialized with 0
Memoization can be used to store previously computed values and avoid redundant computation
Initialize dp array of size n+1 and set all elements to -infinity
Fill dp array by iterating through sequence from left to right
For each element a[i], find maximum possible points that can be earned up to this point
Return dp[n] as the maximum number of points
===END PLAN===

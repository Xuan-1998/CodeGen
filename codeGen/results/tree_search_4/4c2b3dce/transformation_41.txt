===BEGIN PLAN===
Use a sliding window approach to check for the presence of both substrings
The state is a tuple (i, j) where i is the number of occurrences of 'A' in the current substring and j is the number of occurrences of 'B' in the remaining part of the string. 
Check if the length of the string minus i is greater than or equal to 1 and the length of the remaining part of the string minus j is greater than or equal to 1.
The base case is when both substrings have been processed, which occurs when i > 1 and j > 0.

Create a dictionary to store the intermediate results and use memoization to speed up the computation
Check for the presence of 'AB' in the string using the sliding window approach
If it's present, then check for the presence of 'BA' in the remaining part of the string
Return "YES" if both substrings are found, otherwise return "NO"
===END PLAN===

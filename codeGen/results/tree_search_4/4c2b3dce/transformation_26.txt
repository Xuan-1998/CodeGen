===BEGIN PLAN===
Split the string into two halves and recursively solve for each half, combining the results
If 'AB' is found at some index j and s[j-1] is False, then we can safely return True because this 'AB' cannot overlap with any potential 'BA'.
The state can be represented as a tuple of (last_char, remaining_string), with transitions based on whether the current character matches the expected pattern ('AB' or 'BA')
Employ a dictionary to store intermediate results and avoid recomputation
Check for edge cases: string length 0, string length 1
Combine the results from both halves and return 'YES' if found, 'NO' otherwise

===END PLAN===

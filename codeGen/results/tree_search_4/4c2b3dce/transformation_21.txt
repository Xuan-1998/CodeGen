===BEGIN PLAN===
Split the string into two halves and recursively solve for each half, combining the results
The base case would be when i equals 0, since there are no more characters to consider.
Maintain a boolean array where each index corresponds to a character in the string. Set it as true for characters 'A' and 'B', and false otherwise.
Check for two non-overlapping substrings by iterating through the array. 
For every 'A' encountered, check if the next character is 'B'. If found, mark the position as "found" and move forward.
If a 'B' is encountered and it's not followed by an 'A', reset the process and continue checking.
Maintain a boolean array where each index corresponds to a character in the string, set it as true for characters 'A' and 'B', and false otherwise. Then iterate through the array to find two non-overlapping substrings 'AB' and 'BA'
Check if an 'A' is present at any position. If found, check the next character for 'B'. 
If a 'B' is encountered without an 'A' preceding it, reset the process.
Check for the same in reverse order as well
===END PLAN===

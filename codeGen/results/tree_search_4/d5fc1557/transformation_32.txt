===BEGIN PLAN===
Memoize the maximum length of 1's found in previous subarrays to avoid redundant computation.

The state is a tuple (i, ones) where i is the current index and ones is the maximum length of 1's found in previous subarrays.

Define a function max_ones(dp, n) that calculates the maximum length of 1's found in previous subarrays for each index i from 0 to n-1. For each state (i, ones), update dp[i] with the maximum value if i > 0; Initialize dp[0] as 0.

Initialize a DP table dp with size n+1 and fill it with zeros.
Iterate over the array nums from left to right:
  If the current element is 1, update the state (i, ones) by incrementing ones. 
  Update dp[i] with max(dp[i-1], ones + 1) if i > 0; Otherwise, update dp[i] as ones.
Return dp[n-1]

===END PLAN===

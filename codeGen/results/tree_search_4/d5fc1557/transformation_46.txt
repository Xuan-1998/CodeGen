===BEGIN PLAN===
Memoize the maximum length of 1's found in previous subarrays to avoid redundant computation.

The state is a pair (i, j) representing the start and end indices of the current subarray.
State: dp[i][j] = maximum length of 1's found in nums[i:j+1], Transition:
    - If all elements in the subarray are 1's, then dp[i][j] = j - i + 1
    - Otherwise, we find the longest consecutive sequence of 1's within this subarray and add its length to dp[i][j-1]
Memoize the state (i, j) representing the start and end indices of the current subarray.
State: max_length = maximum length of 1's found in nums[:n], 
Transition: max_length = max(max_length, dp[n-1][j])

Finally, return max_length - 1 as it represents the size of the longest non-empty subarray containing only 1's
===END PLAN===

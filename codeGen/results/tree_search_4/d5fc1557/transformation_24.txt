===BEGIN PLAN===
The problem can be broken down into smaller subproblems, where each subproblem has a distinct optimal solution.
Define the state expression as dp[i] = max(dp[i-1], (nums[i] == 1) ? nums[i] : 0) and the base case as dp[0] = 0.
Create a bottom-up dynamic programming solution using a list to store the dp values.

dp = [0]
for i in range(1, n):
    dp.append(max(dp[i-1], (nums[i] == 1) ? 1 : 0))

The final answer is dp[-1].
===END PLAN===

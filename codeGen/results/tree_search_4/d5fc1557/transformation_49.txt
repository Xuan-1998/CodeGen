===BEGIN PLAN===
Memoize the maximum length of 1's found in previous subarrays to avoid redundant computation.

State: dp[i] represents the maximum length of 1's ending at index i.
Transition:
    - If nums[i] is 0, reset dp[i] to 0 because we can't extend a sequence of 1's with a 0.
    - If nums[i] is 1 and it matches the previous element (nums[i-1]), increment dp[i] by 1.
    - Initialize dp[0] to 0.

Create a dynamic programming table to store the maximum length of 1's found in previous subarrays, where each cell represents the longest contiguous sequence of 1's ending at that index.
Return max(dp) as the answer, which is the maximum length of all sequences.
===END PLAN===

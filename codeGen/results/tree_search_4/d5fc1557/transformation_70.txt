===BEGIN PLAN===
Tabulate the dynamic programming table row by row, where each cell represents the longest subarray with only 1's up to that point.
Define dp[i] as the maximum length of a subarray ending at index i, considering all possible previous deletions.
The longest subarray with only 1's up to that point is represented by dp[i].
To find the maximum length of a subarray ending at index i, we need to consider all possible previous deletions.
For each index i, iterate through the array from left to right (or right to left) and keep track of the longest subarray with only 1's up to that point.
When we encounter a 0 in the array, it means we need to delete one element to get the maximum length of a subarray ending at that index.
For each deletion, update dp[i] accordingly based on the previous state of the dynamic programming table.
To find the answer, iterate through the dynamic programming table from left to right (or right to left) and return the maximum value we encounter.
===END PLAN===

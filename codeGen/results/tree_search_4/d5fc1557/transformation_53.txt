===BEGIN PLAN===
Tabulate the dynamic programming table row by row, where each cell represents the longest subarray with only 1's up to that point.

Let dp[i] represent the length of the longest subarray containing only 1's in the first i elements of nums.

dp[i] represents the maximum number of consecutive 1s ending at index i, considering both previous deletions and current array.

Initialize a list dp of size n+1 with zeros. Set dp[0] to 0.

For each element in nums (index i from 1 to n):
    If nums[i-1] == 0:
        Set dp[i] to 0
    Else:
        If i == 1 or nums[i-2] == 0:
            Set dp[i] to 1
        Else:
            Set dp[i] to dp[i-1]

For the last step, iterate from right to left (index j from n-1 to 1):
    If dp[j+1] > 0:
        Return dp[j+1]
Return 0

===END PLAN===

===BEGIN PLAN===
dp[i] = the maximum length of the recommended paths between vertices in the fixed path from s to vertex i
dp[i] = the minimum number of times the shortest path from 1 to i needs to be recomputed
Create a dynamic programming table dp where dp[0] = 0, and for each vertex i in the fixed path:
    if i is not the last vertex in the fixed path:
        dp[i+1] = max(dp[i+1], dp[i] + 1)
    else: 
        dp[t] = min(dp[t], dp[p_k] + k - p_k + 1)
Return dp[t]
===END PLAN===

===BEGIN PLAN===
Approach: Use top-down approach with memoization to compute the maximum and minimum number of times the shortest path from a vertex to t needs to be recomputed.

State: Let dp[i][j] represent the number of times recomputation is needed when we are at vertex p_i, having recomputed i times previously. For base case, consider vertices in the fixed path.
Let dp[i][j] = 1 + min(dp[u][k-1]) for all edges (u,p_i) in the graph, and 0 if there's no edge from u to p_i.

Transition relationship: dp[i][j] depends on dp[u][k-1] for all u such that an edge exists from u to p_i.

Steps:

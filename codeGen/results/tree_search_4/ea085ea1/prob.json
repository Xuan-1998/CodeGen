"{\"statement\": \"Task: Given two strings str1 and str2, both of length N, find the maximum number of common non-overlapping substrings between them. A substring is a contiguous sequence of characters within a string.\\n\\nInput: The input consists of two strings str1 and str2, each of length N, which arrive from standard input.\\n\\nOutput: The output is a single integer representing the maximum number of common non-overlapping substrings between str1 and str2.\\n\\nConstraints: 1 \\u2264 N \\u2264 100, where N is the length of each input string. Each character in the strings belongs to one of the 3 categories represented by * or # or @.\", \"editorial\": \"\", \"tag\": \"['String algorithms', 'Dynamic programming', 'Data structures']\", \"difficulties\": \"MEDIUM\", \"source\": \"geeksforgeeks\", \"url\": \"https://practice.geeksforgeeks.org/problems/a4f19ea532cee502aabec77c07e0d0a45b76ecf9/1\", \"sample_test_cases\": [{\"input\": \"str1 = \\\"*@#*\\\" \\r\\nstr2 = \\\"*#\\\"\", \"output\": \"2\"}, {\"input\": \"str1 = \\\"***\\\"\\r\\nstr2 = \\\"##\\\"\", \"output\": \"0\"}]}"
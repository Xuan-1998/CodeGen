To apply memoization, we can use a dictionary to store the results of subproblems as we solve them, so that if a subproblem is encountered again later, it can be quickly looked up instead of having to recalculate.
Consider defining a state as a tuple (i, prev_max): the current index i and the previous maximum element prev_max in the subarray.
Define a state as a tuple (i, max_val) representing the current index i and the maximum value max_val seen so far in the subarray. A transition from state (i-1, prev_max) to state (i, max_val) occurs when we consider including the element at index i into the subarray.
Create a function memoized_function(i) that uses the dictionary to store results of subproblems

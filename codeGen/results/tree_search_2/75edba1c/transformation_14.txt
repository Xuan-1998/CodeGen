To solve this problem using dynamic programming, we can consider the maximum element in a subarray as the state variable. This means that for each subarray ending at index i, we need to know its maximum element.
The state is dp[i][j] = 1 if max(arr[j..i]) > K and j <= i/2, otherwise 0.
dp[i+1][k] = 1 if arr[k] > max(arr[:i]), and there exists some j <= k such that dp[j][i] = 1.
Dynamic Programming: Use a 2D array to store the maximum element of each subarray ending at index i, where the size of the subarray is j.

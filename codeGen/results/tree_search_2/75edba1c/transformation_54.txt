To apply memoization, we can use a dictionary to store the results of subproblems as we solve them, so that if a subproblem is encountered again later, it can be quickly looked up instead of having to recalculate.
Consider defining a state as a tuple (i, prev_max): the current index i and the previous maximum element prev_max in the subarray.
Consider maintaining a 2D array dp of size (N+1) x (K+1) where dp[i][j] is the number of contiguous subarrays ending at index i with maximum element strictly greater than j.
Define a 2D array dp of size (N+1) x (K+1) where dp[i][j] is the number of contiguous subarrays ending at index i with maximum element strictly greater than j.

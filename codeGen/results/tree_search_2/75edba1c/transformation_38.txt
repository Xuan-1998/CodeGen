To apply memoization, we can use a dictionary to store the results of subproblems as we solve them, so that if a subproblem is encountered again later, it can be quickly looked up instead of having to recalculate.
The state expression could be (i, max_val): the current index i and the maximum value max_val seen so far in the subarray.
The next state would be (j, max(max_val, Arr[j])) if j > i.
Use a dictionary to store the results of subproblems where the key is a tuple containing the current index and the maximum value seen so far, and the value is the count of contiguous subarrays with max element greater than K.

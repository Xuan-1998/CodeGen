To apply memoization, we can use a dictionary to store the results of subproblems as we solve them, so that if a subproblem is encountered again later, it can be quickly looked up instead of having to recalculate.
The state expression could be (i, k): an integer i from 0 to N-1 representing the current index in the array, and an integer k representing the maximum value allowed in the subarray.
dp(i, k) = 1 if max(arr[i:i+k]) > K else 0
Creating a 2D table dp where dp[i][k] represents the number of subarrays ending at index i with maximum value less than or equal to k.

To solve this problem using dynamic programming, we can consider the maximum element in a subarray as the state variable. This means that for each subarray ending at index i, we need to know its maximum element.
Let the state be dp[i] = 1 if max(arr[0..i]) > K, otherwise 0.
dp[i] = 1 if arr[i] > K and max(dp[:i-1]) == 0, otherwise dp[i-1].
Use a bottom-up dynamic programming approach by initializing an array of size N+1 to store the state variables, where N is the length of the input array.

To apply memoization, we can use a dictionary to store the results of subproblems as we solve them, so that if a subproblem is encountered again later, it can be quickly looked up instead of having to recalculate.
Consider defining a state as a tuple (i, prev_max): the current index i and the previous maximum element prev_max in the subarray.
Consider maintaining an array dp of length N+1 where dp[i] is the number of contiguous subarrays ending at index i where the maximum element in the subarray is strictly greater than K.
Use a dictionary to store the results of subproblems as you solve them and look up values instead of recalculating when they're encountered again later.

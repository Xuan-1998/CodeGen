The problem can be solved by identifying all possible permutations of teams, then checking each permutation to see if it's a winning team.
The state expression is the current set of winning teams, with the base case being an empty set when n = 0.
\
You can use dynamic programming by creating a 2D table where each cell represents the set of winning teams for a given number of phases, with the base case being an empty set when n = 0.

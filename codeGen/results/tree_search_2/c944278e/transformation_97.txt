The optimal substructure is that the winner of one game determines the winners of the subsequent games.
Define the state expression as a binary string representing the current tournament phase, and the base case is when the phase reaches its maximum value (2^n - 1), in which case there's only one winning team.
The state is a dictionary where each key represents a possible outcome in the current game, and the corresponding value is a list of winning teams for that outcome. The base case is when the phase reaches its maximum value (2^n - 1), in which case there's only one winning team.\
You can implement tabulation by initializing a table of size 2^n and filling it up recursively, starting from the base case.

The optimal substructure is that the winner of one game determines the winners of the subsequent games.
Define the state expression as a tuple containing the current team's skill level and the remaining teams' skill levels, and the base case is when there's only one team left in the tournament.
The state could be a tuple (curr_level, remaining_teams) where curr_level is the current level of the tournament and remaining_teams are the teams that are still in the competition.
You can use a 2D array to store the results of subproblems, with the outer dimension representing the current team's skill level and the inner dimension representing the remaining teams' skill levels.

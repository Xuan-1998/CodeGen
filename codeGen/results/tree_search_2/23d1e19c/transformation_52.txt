Explore the idea of using a priority queue to maintain the shortest distance from each vertex to t and update the minimum and maximum number of recomputations based on the path recomputation.
State: dp[i] = number of times the shortest path from vertex i to t needs to be recomputed
dp[i] = 0 if i is on the fixed path; dp[i] = min(max(dp[j] + 1, j in path from s to i), i not in fixed path) otherwise
Memoization approach by using a dictionary to store the computed values for faster lookups.

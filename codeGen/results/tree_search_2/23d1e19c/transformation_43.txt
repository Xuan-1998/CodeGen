Explore the idea of using a priority queue to maintain the shortest distance from each vertex to t and update the minimum and maximum number of recomputations based on the path recomputation.
State: dp[i][j] = min/max times the shortest path from vertex i to t needs to be recomputed when recomputation is needed j times, assuming that the previous recomputations are already done.
dp[i][j] = min/max of the number of times shortest path from vertex p_1 to t needs to be recomputed when recomputation is needed j times, assuming that previous recomputations are already done.
Use a dynamic programming approach where dp[i] = min/max of the number of times shortest path from vertex p_1 to t needs to be recomputed when recomputation is needed i-1 times.

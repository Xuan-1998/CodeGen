Consider using dynamic programming with a 2D array to store the minimum and maximum number of recomputations for each vertex, where the state represents the current vertex and the previous path.
The state expression is (v, prev_path) where v is the current vertex and prev_path is the sequence of vertices in the path from s to t up to the previous vertex.
DP state: (v, prev_path) where v is the current vertex and prev_path is the sequence of vertices in the path from s to t up to the previous vertex; DP transition: update state with new vertex
Implement memoization by storing the computed values in a dictionary where the key is the state and the value is the corresponding result.

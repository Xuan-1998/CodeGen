To solve this problem, use a bottom-up approach with tabulation, where you start from the base case and build up to the final solution.
dp[i][j] := True if there's a subset of the first i elements that sums up to j % m, False otherwise
dp[i][j] := dp[i-1][j] or (j - set[i-1] >= 0 and dp[i-1][j - set[i-1]]),
Use a nested loop to fill up the dp array, starting from i=0 and j=0, and iterate until i=n and j=m.

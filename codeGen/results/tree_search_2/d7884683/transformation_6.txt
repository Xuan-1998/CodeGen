\
State: Let dp[i] represent the maximum number of times array[0..i] can be partitioned into two contiguous subarrays with equal sum.
dp[i] = max(dp[j] + 1) for all j in range(0, i) such that sum(array[0..j]) == sum(array[j+1..i]).
Dynamic Programming using Tabulation: Implement a bottom-up approach by initializing dp with a size of n and filling it up based on the state transition rules.

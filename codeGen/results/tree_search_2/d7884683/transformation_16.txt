\
State: Define dp[i] as the boolean indicating whether array[0..i] can be partitioned into two contiguous subarrays with equal sum, and base case is when i is 1.
dp[i] = any k where 0 <= k < i and (array[0..k].sum() == array[k+1..i].sum())
Use a dictionary memo of size (n+1), initialized as {}, where memo[k] is a set of indices representing all possible k values that satisfy the condition in the base case.

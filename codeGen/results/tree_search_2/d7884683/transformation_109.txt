\
Consider each element arr[i] as a pivot. Then dp[i] = max(dp[j-1] + (arr[i-1] <= arr[i])) for all j from 0 to i.
Consider the prefix sum array, where dp[i] is the maximum number of times the subarray ending at index i can be partitioned. Then, for each element arr[i], if its prefix sum equals to the suffix sum of the remaining elements, we increment the result by 1. The state transition relationship is dp[i] = max(dp[j-1] + (prefix_sum[i] == suffix_sum[i])) for all j from 0 to i.
dp[i] = sum(arr[:i]) if i > 0 else 0; max(dp[i-1] + (sum(arr[:i]) == sum(arr[i:])), dp[i-1])

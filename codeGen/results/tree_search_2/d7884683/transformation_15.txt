\
State: Define dp[i] as the boolean indicating whether array[0..i] can be partitioned into two contiguous subarrays with equal sum, and base case is when i is 1.
dp[i] = any k where 0 <= k < i and (array[0..k].sum() == array[k+1..i].sum())
Use a boolean array dp of size n, initialized as False, where dp[i] represents whether the subarray from 0 to i can be partitioned into two contiguous subarrays with equal sum.

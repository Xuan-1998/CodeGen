\
Let the state be dp[i] = the maximum number of times the array can be partitioned up to index i, considering all possible partitions that end at i.
dp[i] = min(dp[j]+1) for j in range(i-1, 0, -1) where sum(arr[:j]) == sum(arr[j:])
Create a dynamic programming table dp of size n+1 and initialize all values to 0, then update each value based on the recurrence relation.

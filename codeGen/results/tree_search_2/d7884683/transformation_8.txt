\
State: Let dp[i] represent the maximum number of times array[0..i] can be partitioned into two contiguous subarrays with equal sum.
dp[i] = max(dp[j] + 1) for all j in range(0, i) such that sum(array[0..j]) == sum(array[j+1..i]).
Dynamic Programming using Top-Down Approach with Memoization: Implement a top-down approach by defining a recursive function and storing the intermediate results in a dictionary or an array for faster computation.

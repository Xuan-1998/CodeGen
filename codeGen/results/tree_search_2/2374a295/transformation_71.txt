Determine whether the problem has an optimal substructure, such as finding the maximum or minimum value in a sequence, and decide if dynamic programming is the best approach.
There are two possible choices: either the last number in the sequence is a multiple of both i and j, or it's not. In the former case, we have s[i, j] = âˆ‘_{k=2}^{min(i, j)} s[k, j/k], and in the latter case, we have s[i, j] = 0.
Determine if the problem has a greedy property, such as choosing the maximum or minimum value in a sequence, and decide if dynamic programming is the best approach. If not, consider using memoization to store intermediate results.
Initialize a list dp of size n+1 with all elements set to 0, then use a for loop to fill up the table in bottom-up manner.

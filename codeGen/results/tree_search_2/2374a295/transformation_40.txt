Determine whether the problem has an optimal substructure, such as finding the maximum or minimum value in a sequence, and decide if dynamic programming is the best approach.
Let s[i] be the number of good sequences ending with i and having length k, where 1 ≤ i ≤ n.
A state could be a good sequence ending with i. The transition from i to i+1 is that we consider all numbers less than or equal to i as the last number of our sequence. So the transition would be dp[i+1] = sum(dp[j] for j in range(1, i))
Create a dynamic programming table to store the results of subproblems and fill it in a bottom-up manner.

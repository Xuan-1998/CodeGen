Think about using memoization to store the results of subproblems and optimize the recursive function by avoiding repeated computations.
dp(i, k) = 1 if i == 0, sum(dp(j-1, k-j)*is_divisible(n, j)) for j in range(1, k+1)
dp(i, k) = dp(i-1, k-1) * is_divisible(n, i) + (i == 0) ? 1 : 0 if the state only depends on the current value and not on previous values
Use a dictionary to store the results of subproblems with memoization.

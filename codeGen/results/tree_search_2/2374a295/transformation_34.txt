Think about using memoization to store the results of subproblems and optimize the recursive function by avoiding repeated computations.
dp(i, k) = 1 if i > n or k == 0, 0; dp(i, k) = sum(dp(j-1, k-j)*is_divisible(i, j)) for j in range(2, min(i, k)+1)
Consider using a recursive function with memoization to store the results of subproblems and avoid repeated computations.
Use a dictionary to store the memoized values

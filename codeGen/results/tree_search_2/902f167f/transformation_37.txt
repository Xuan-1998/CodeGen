The problem has overlapping subproblems because the same subproblem may be encountered multiple times during the computation, and it would be efficient to store the results of these subproblems in a memoization table.
Let the state expression be dp[i][j] representing the minimum number of integer-sided squares required to tile a rectangle of size i x j. The base case would be when i = m and j = n, where the minimum number is the input itself.
dp[i][j] represents the minimum number of integer-sided squares required to tile a rectangle of size i x j. For dp[i][j], consider all possible squares that can be placed in the top-left 1x1 corner, and for each such square, compute dp[i - s][j - s] where s is the side length of the square.
Implement memoization using a decorator that wraps the recursive function and stores the results in a cache.

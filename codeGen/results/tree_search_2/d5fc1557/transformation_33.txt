Think about using a bottom-up approach with tabulation, where you iterate over the array and maintain a running maximum length of consecutive ones. You can then modify this approach to find the longest subarray containing only 1's after removing one element from the input array.
Consider the current maximum length of consecutive ones up to index i as the state, denoted by dp[i].
Denote the maximum length of consecutive 1's as max_len. Iterate through the array from left to right. For each index i, update max_len if the current sequence of ones is longer than the previous longest one.
Use a bottom-up approach with a dynamic programming (DP) table dp where dp[i] represents the maximum length of consecutive 1's up to index i.

Think about using a bottom-up approach with tabulation, where you iterate over the array and maintain a running maximum length of consecutive ones. You can then modify this approach to find the longest subarray containing only 1's after removing one element from the input array.
The base case is when the array only contains 1's (dp[0] = n) and when it starts with a 0 (dp[0] = 0).
Use a similar idea for transitioning between states when removing an element from the array. For example, if we remove nums[i], then dp[i+1] would be updated based on whether nums[i] is 0 or 1.
Use a dynamic programming table to keep track of the maximum length of consecutive ones for each prefix of the array.

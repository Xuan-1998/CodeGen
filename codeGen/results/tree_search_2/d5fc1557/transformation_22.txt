Consider a top-down dynamic programming approach where you recursively remove elements from the array until you find the longest subarray of ones. Then, use memoization to store the results of subproblems.
The state could be defined as (ones, zeros) where ones is the count of 1's in the prefix of length i and zeros is the count of 0's in that same prefix.
Think about defining the state as (ones, n) where ones is the count of 1's in the current window of size n.
Create a list called dp where each element at index i stores the length of the longest subarray containing only 1's up to index i, and use this list for memoization.

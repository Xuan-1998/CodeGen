Consider a top-down dynamic programming approach where you recursively remove elements from the array until you find the longest subarray of ones. Then, use memoization to store the results of subproblems.
The state could be defined as (ones, zeros) where ones is the count of 1's in the prefix of length i and zeros is the count of 0's in that same prefix.
Consider using a sliding window approach where you maintain two pointers, left and right, to track the longest subarray of ones.
Use dynamic programming with recursion and memoization by storing the state (ones, zeros) for each subproblem.

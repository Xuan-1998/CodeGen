Think about using a bottom-up approach with tabulation, where you iterate over the array and maintain a running maximum length of consecutive ones. You can then modify this approach to find the longest subarray containing only 1's after removing one element from the input array.
The base case is when the array only contains 1's (dp[0] = n) and when it starts with a 0 (dp[0] = 0).
Consider two states: the current maximum length of consecutive ones (dp[i]) and the previous maximum length minus one (dp[i-1]).
Use dynamic programming to maintain a running maximum length of consecutive ones, initializing dp[0] = 0 when the array starts with a 0 and dp[0] = len(nums) when the array only contains 1's.

Think about using a bottom-up approach with tabulation, where you iterate over the array and maintain a running maximum length of consecutive ones. You can then modify this approach to find the longest subarray containing only 1's after removing one element from the input array.
Define the state expression as dp[i]: the maximum length of consecutive ones up to index i. The base case is when i = 0, where dp[0] = 0 if the array starts with a 0 or dp[0] = n if it only contains 1's.
Let dp[i] be the maximum length of consecutive ones up to index i, considering whether the element at index i is a 0 or a 1.
Maintain two pointers, left and right, to represent the longest subarray containing only 1's. Iterate over the array and update these pointers based on whether the current element is a 0 or a 1.

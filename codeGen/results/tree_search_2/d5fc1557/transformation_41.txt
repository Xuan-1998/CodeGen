Think about using a bottom-up approach with tabulation, where you iterate over the array and maintain a running maximum length of consecutive ones. You can then modify this approach to find the longest subarray containing only 1's after removing one element from the input array.
The base case is when the array only contains 1's (dp[0] = n) and when it starts with a 0 (dp[0] = 0).
Think about updating dp[i] based on whether nums[i] is 0 or 1. If it's a 1, update dp[i] with max(dp[i], dp[i-1]+1). If it's a 0, reset dp[i] to the previous maximum length minus one.
Use dynamic programming with memoization to keep track of the maximum length of consecutive ones seen so far.

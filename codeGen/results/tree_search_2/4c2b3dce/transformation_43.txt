Determine if 'A' or 'B' appears more frequently in the string, then use this information to decide whether the string contains both substrings.
When i = 0, the base case is True (assuming an empty string contains both substrings).
The number of 'A's in the current prefix equals the number of 'B's
Determine the number of characters in the string, then iterate over the string from left to right. For each character, check if it's an 'A' or a 'B'. If both are found, update the count accordingly. This approach can be memoized by storing the counts of 'A's and 'B's at each position.

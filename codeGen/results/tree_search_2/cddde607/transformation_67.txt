Consider a 2D DP table where each cell dp[i][j] represents whether it's possible to reach cell (i, j) with exactly K coins. The base case would be when i == N-1 and j == N-1, in which case dp[N-1][N-1] = true if it's possible to collect exactly K coins from cells (0, 0) to (N-1, N-1).
dp[N-1][N-1] = true if it's possible to collect exactly K coins from cells (0, 0) to (N-1, N-1).
Think about the state as a tuple (i, j, k) representing whether it's possible to collect exactly k coins from cells (0, 0) to (i, j). Then, formulate the transition relationships based on moving right or down.
Fill dp[][] table with base cases and then fill in other cells using recursive formula

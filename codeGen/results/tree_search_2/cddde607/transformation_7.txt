Consider a 2D DP table where each cell dp[i][j] represents the number of ways to reach cell (i, j) with exactly K coins. The base case would be when i == N-1 and j == N-1, in which case dp[N-1][N-1] = count the number of ways to collect exactly K coins from cells (0, 0) to (N-1, N-1).
dp[i][j] represents the number of ways to reach cell (i, j) with exactly K coins.
Consider how many coins are left after reaching the current cell, and see if there is still enough time to collect the remaining coins.
Use memoization with recursive function calls

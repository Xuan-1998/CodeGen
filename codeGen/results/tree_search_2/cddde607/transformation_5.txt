Consider a 2D DP table where each cell dp[i][j] represents the number of ways to reach cell (i, j) with exactly K coins. The base case would be when i == N-1 and j == N-1, in which case dp[N-1][N-1] = count the number of ways to collect exactly K coins from cells (0, 0) to (N-1, N-1).
dp[i][j] represents the number of ways to reach cell (i, j) with exactly K coins.
To consider whether we are currently in a cell that has more coins than the target K and count the number of ways to reach this cell.
Use memoization with a dictionary where each key is a unique state (i, j, coins) and the value is the count of ways to reach that state.

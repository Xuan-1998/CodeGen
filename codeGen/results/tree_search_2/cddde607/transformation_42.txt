Use a 2D DP table where each cell dp[i][j] represents the minimum number of steps needed to reach cell (i, j) with exactly K coins. The base case would be when i == N-1 and j == N-1, in which case dp[N-1][N-1] = 0. Then fill up the DP table by considering all possible moves from each cell.
The base case would be when i == 0 and j == 0, in which case dp[0][0] = 1 if arr[0][0] <= K, otherwise it's 0.
Create a 2D DP table where each cell dp[i][j] represents the number of ways to reach cell (i, j) with exactly k coins. The base case would be when i == N-1 and j == N-1, in which case dp[N-1][N-1] = 1 if arr[N-1][N-1] <= K, otherwise it's 0.
DP table can be filled using a nested loop that iterates over the rows and columns of the matrix.

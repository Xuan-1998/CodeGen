Memoization can be used to optimize the recursive function by storing previously computed values in a dictionary to avoid redundant calculations.
The state is the maximum sum of the subsequence ending at each position, and the base case is when the array is empty or only contains one element.
Define the state as a pair (i, sum) where i is the index of the current position in the array, and sum is the maximum sum of the subsequence ending at that position.
Memoize the recursive function by storing previously computed values in a dictionary to avoid redundant calculations.

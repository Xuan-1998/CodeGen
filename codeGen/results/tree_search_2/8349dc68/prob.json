"{\"statement\": \"Task: Given an integer array arr and an integer k, partition the array into contiguous subarrays of length at most k. After partitioning, change the values of each subarray to become the maximum value of that subarray. Return the largest sum of the given array after partitioning.\\n\\nInput: The input consists of an integer array arr of length n and an integer k, which arrives from standard input.\\n\\nOutput: The output should be an integer, representing the largest sum of the given array after partitioning.\\n\\nConstraints: The length of the input array is at most 500, and each element of the array is an integer between 0 and 10^9. The value of k is between 1 and the length of the array.\", \"editorial\": \"\", \"tag\": \"['Dynamic programming', 'Data structures']\", \"difficulties\": \"MEDIUM\", \"source\": \"leetcode\", \"url\": \"https://leetcode.com/problems/partition-array-for-maximum-sum/\", \"sample_test_cases\": [{\"input\": [[1, 15, 7, 9, 2, 5, 10], 3], \"output\": 84}]}"
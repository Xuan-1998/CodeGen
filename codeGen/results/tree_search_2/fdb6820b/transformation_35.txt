The problem can be solved by using dynamic programming with both memoization and tabulation, where we first build a bottom-up solution table and then use this table to compute the final solution.
let dp[i] be the number of ways to form a sum less than or equal to i, and define base case as dp[0] = 1.
dp[i] = sum(dp[j - arr[k]) for k in range(m) for j in range(1, i + 1)],
Using a bottom-up tabulation approach to build the dynamic programming table

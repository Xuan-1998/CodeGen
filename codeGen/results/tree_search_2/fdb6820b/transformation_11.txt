The problem can be solved by using dynamic programming with memoization, where we build a table of solutions to subproblems and use this table to compute the solution to the original problem.
The state expression could be dp[n], where n is the remaining sum needed to reach N, and the base case would be dp[0] = 1 (since one way to form a sum of 0 is to not include any numbers).
dp[i] represents the number of ways to form a sum i, where i ranges from 0 to N.
Dp-Tabulation Method: Creating an array of size N+1, where dp[i] represents the number of ways to form sum i

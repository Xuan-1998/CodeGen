Since we can delete elements at most once, there might be an overlap in subproblems when choosing whether to delete a certain element or not. This suggests that top-down approach with memoization could be used.
The state is the sum of all elements in the sequence seen so far, and whether it has been fully used to form a complete arithmetic sequence; The base case is when all elements have been processed.
The state is the number of sequences seen so far, and the maximum number of points that can be earned by deleting elements from the current sequence; The base case is when the current sequence is empty.
Use a recursive function with memoization to store the results of subproblems in a dictionary as we solve them.

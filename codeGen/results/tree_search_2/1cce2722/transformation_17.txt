Since we can delete elements at most once, there might be an overlap in subproblems when choosing whether to delete a certain element or not. This suggests that top-down approach with memoization could be used.
The state is whether an element is included in the optimal solution or not, i.e., {True, False}; The base case is when there's only one element left.
The state can be a single integer representing the maximum sum of points that can be earned by deleting elements from the sequence up to the current position. The transition relationship can be formulated as dp[i] = max(dp[i-1], a[i-1] + dp[i-2]), where i is the current index.
Implement memoization using recursion to avoid redundant calculations and store the results of subproblems in a dictionary.

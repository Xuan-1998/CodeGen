Consider the fact that the maximum number of points that can be earned by deleting elements from the sequence is equivalent to finding the minimum number of non-deleted elements. A bottom-up approach with tabulation might be more suitable for this problem as we can iterate through the sequence and calculate the minimum number of non-deleted elements.
The state expression is dp[i] = minimum number of non-deleted elements up to index i. Base case: dp[0] = n, since the maximum number of points that can be earned by deleting elements from the sequence is equivalent to finding the minimum number of non-deleted elements.
dp[i] = 0 if i is 0, else min(1 + dp[i-1], dp[i-2])
Utilize a combination of both tabulation and memoization, where you precompute the results for all subproblems and store them in an array, then iterate through the sequence to find the minimum number of non-deleted elements.

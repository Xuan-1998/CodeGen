Consider a top-down recursive approach with memoization to identify the longest palindromic substring by checking if substrings are palindromes, and store the results in a dictionary.
'The length of the current palindrome': Define state as the length of the current palindrome being checked, and check if it's equal to its reverse.
Define the state as the last character processed in the current palindrome, and the transition relationship is whether the character before it forms a palindrome with it or not.
Applying dynamic programming by filling up a 2D table

'Optimal' refers to whether we're trying to find the maximum value or the minimum effort required to solve this problem.
dp[i][j] = 1 if S[i..j] is a palindrome, and 0 otherwise
for each i in range(len(S)), dp[i][i] = 1, because a single character is always a palindrome
Create a dictionary dp where keys are tuples (i, j) representing a substring S[i..j], and values are 1 if the substring is a palindrome, and 0 otherwise. Then, iterate over all substrings of S in increasing order of their lengths, and update each cell dp[(i, j)] based on whether S[i..j] is a palindrome or not.

What if we already know some palindromes, and we can use those as building blocks? What would be an 'optimal' choice in that case?
Define the state expression and base case as follows: Let dp[i][j] be true if the substring S[i..j] is a palindrome, false otherwise.
For any given substring of S, if the first character is equal to the last character and the substring in between is a palindrome, then the whole thing is a palindrome. So, let dp[i][j] = (S[i] == S[j]) && dp[i-1][j+1].
Use dynamic programming with a 2D array to store whether each substring is a palindrome.

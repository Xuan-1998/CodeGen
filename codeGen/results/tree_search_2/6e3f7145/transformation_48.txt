Choosing a dynamic programming approach that involves building upon previously computed solutions for smaller subproblems.

The problem can be solved using a dynamic programming approach where we maintain a table that keeps track of the length of the longest palindromic substring for each prefix of the input string.
Use a bottom-up approach to fill up a 2D table, where each cell dp[i][j] represents the length of the longest palindromic substring ending at indices i and j.

Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color): boolean indicating whether the first color is the same as the last color. If true, we need to recolor all lamps.
DP_state = (i, s1) and DP_state = (n-i, s2): boolean indicating whether the first color is the same as the last color in garland of length i and n-i respectively.
To initialize a 2D table dp with dimensions n+1 by 3, where dp[i][color] represents the minimum number of recolors needed to obtain a diverse garland from the first i lamps when the last lamp is color 'R', 'G' or 'B'.

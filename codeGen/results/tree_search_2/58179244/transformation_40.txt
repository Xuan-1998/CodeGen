Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color, prev_color): tuple representing the number of recolors needed for garland up to index n with same color as the previous one and its previous color.
DP_state = (lamp_index, same_color): tuple representing the number of recolors needed for garland up to lamp index with same color as the previous one.
Creating a dictionary DP where each key is a tuple representing the current state and the corresponding value is the minimum number of recolors needed to get from that state.

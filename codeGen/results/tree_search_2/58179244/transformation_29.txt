Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, last_color): number of recolors needed for garland up to index n with last color as 'last_color'.
Consider DP_state = (n, prev_colors): number of recolors needed for garland up to index n given previous colors 'prev_colors'.
Create an array dp[n+1] where dp[i] represents the minimum number of recolors needed for garland up to index i.

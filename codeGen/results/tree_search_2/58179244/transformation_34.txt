Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color): boolean indicating whether the first color is the same as the last color. If true, we need to recolor all lamps.
DP_state = (i, c) and DP_state = (j, c'): boolean indicating whether the current color is the same as the next color in garlands of lengths i and j.
To store the results of subproblems as we solve them, so that when solving a problem, you check if it has been solved before and return the precomputed result instead of recomputing it.

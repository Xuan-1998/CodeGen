Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color, prev_color): tuple representing the number of recolors needed for garland up to index n with same color as the previous one and its previous color.
DP_state = (n, last_color, prev_color): tuple representing the minimum number of recolors needed to obtain a diverse garland from the initial one.
Implement tabulation by initializing an array dp of size n+1, where dp[i] represents the minimum number of recolors needed for the first i lamps, and then fill up this array using a bottom-up approach.

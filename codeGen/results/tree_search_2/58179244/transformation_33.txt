Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color): boolean indicating whether the first color is the same as the last color. If true, we need to recolor all lamps.
DP_state = (i, c) and DP_state = (j, c'): boolean indicating whether the current color is the same as the next color in garlands of lengths i and j.
To use a 2D table with dimensions n x (n+1), where each cell DP[i][j] represents the minimum number of recolors needed for the first j lamps in garland of length i.

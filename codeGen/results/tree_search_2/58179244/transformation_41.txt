Apply a bottom-up dynamic programming approach using tabulation, by iterating through all possible subproblems in order of increasing size.
DP_state = (n, same_color, prev_color): tuple representing the number of recolors needed for garland up to index n with same color as the previous one and its previous color.
DP_state = (lamp_index, same_color): tuple representing the number of recolors needed for garland up to lamp index with same color as the previous one.
Using a 1D array DP[] where each cell DP[i] represents the minimum number of recolors needed for the first i lamps.

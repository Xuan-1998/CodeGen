The optimal solution involves using both memoization and tabulation, by first filling up a memoized table and then performing a final tabulation step.
Define the state as (i, j) representing the maximum value that can be obtained by choosing an element in cell (i, j) and moving down or right. The base case is when i == n - 1 (n being the size of the grid), indicating the end of a path.
State (i, j) represents the maximum value that can be obtained by choosing an element in cell (i, j) and moving down to any cell below it, or moving right to a cell with the same column if i < n - 1.
Initialize a 2D array dp with size n x n, where dp[i][j] represents the maximum sum that can be obtained by choosing an element in cell (i, j), and update it based on the values from the previous row.

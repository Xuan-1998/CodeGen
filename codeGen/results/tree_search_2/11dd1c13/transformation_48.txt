The optimal solution involves using both memoization and tabulation, by first filling up a memoized table and then performing a final tabulation step.
Define the state as (i, j) representing the maximum value that can be obtained by choosing an element in cell (i, j) and moving down or right. The base case is when i == n - 1 (n being the size of the grid), indicating the end of a path.
State (i, j) represents the maximum value that can be obtained by choosing an element in cell (i, j) and moving down to any cell below it, or moving right to a cell with the same column if i < n - 1.
Use a recursive function to fill up a memoized table, where the base case is when i == n - 1, and the recursive case involves calculating the maximum sum for each state (i, j) by considering all possible moves down or right.

Memoization can be used to solve this problem by recursively calling a function and storing the results of subproblems in a dictionary.
dp[i][j] = min(min(grid[i][k] for k in range(len(grid[0]))), (i > 0) and min(dp[i-1][k] for k in range(len(grid[0]))))
dp[i][j] = dp[i-1][j] + grid[i][j];
Use a dictionary to store the intermediate results and access them when needed.

{"statement": "Task: Given a string of '0's and '1's, the task is to flip the minimum number of digits to make the string monotone increasing. The string is monotone increasing if it starts with any number of '0's, followed by any number of '1's.\n\nInput: The input is a string S of '0's and '1's, which arrives from standard input.\n\nOutput: The output is an integer representing the minimum number of flips required to make the string S monotone increasing.\n\nConstraints: The input string S has a length between 1 and 20000, and consists only of '0' and '1' characters.\n\nMathematical concepts: Given a binary string, we need to find the minimum number of flips required to make it monotone increasing. A binary string can be represented as a sequence of 0s and 1s. A sequence is said to be monotone increasing if each element is greater than or equal to the previous element. We can represent the binary string as a sequence of integers, where 0 is represented as 0 and 1 is represented as 1. We need to find the minimum number of flips required to make this sequence monotone increasing.\n\nComputer science concepts: The input is a string that arrives from standard input. We can use string manipulation techniques to convert the input string into a sequence of integers. We can then use dynamic programming to find the minimum number of flips required to make the sequence monotone increasing. We can define a state as the number of flips required to make the first i elements of the sequence monotone increasing. We can then use this state to compute the number of flips required to make the first i+1 elements of the sequence monotone increasing. We can use memoization to store the intermediate results and avoid recomputing them. The final answer is the number of flips required to make the entire sequence monotone increasing.", "editorial": "", "tag": "['String algorithms', 'Dynamic programming']", "difficulties": "MEDIUM_HARD", "source": "leetcode", "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing/", "sample_test_cases": [{"input": ["\"00110\""], "output": 2}]}
{"statement": "Task: Given a 2D binary matrix of size n x m, find the area of the largest square containing only 1's.\n\nInput: The input consists of n lines, each containing m integers (0 or 1) separated by a space. The input is provided through standard input.\n\nOutput: The output should be a single integer representing the area of the largest square containing only 1's.\n\nConstraints: The input matrix can have a maximum size of 300 x 300. The integers in the matrix are either 0 or 1.", "editorial": "", "tag": "['Matrices', 'Dynamic programming', 'Data structures']", "difficulties": "MEDIUM_HARD", "source": "leetcode", "url": "https://leetcode.com/problems/maximal-square/", "sample_test_cases": []}
{"statement": "Task: Given an integer n, find the value of the nth number in the Tribonacci sequence. The Tribonacci sequence is defined as Tn = Tn-1 + Tn-2 + Tn-3, with T0 = 0, T1 = 1, and T2 = 1.\n\nInput: The input consists of a single integer n, representing the index of the Tribonacci sequence. The input is provided through standard input.\n\nOutput: The output should be a single integer, representing the value of the Tribonacci sequence at index n.\n\nConstraints: The input integer n must satisfy the constraint 0 <= n <= 37. The output integer is guaranteed to fit within a 32-bit integer.", "editorial": "", "tag": "['Dynamic programming', 'Mathematics']", "difficulties": "EASY", "source": "leetcode", "url": "https://leetcode.com/problems/n-th-tribonacci-number/", "sample_test_cases": [{"input": [4], "output": 4}]}
{"statement": "Task: Given a square grid of integers, find the minimum sum of a falling path with non-zero shifts, where a falling path is a choice of exactly one element from each row of the grid, such that no two elements chosen in adjacent rows are in the same column.\n\nInput: The input is a square grid of integers, where each row has the same number of elements. The input is provided through standard input.\n\nOutput: The output is a single integer that represents the minimum sum of a falling path with non-zero shifts.\n\nConstraints: The length of each row of the grid is between 1 and 200, and each element of the grid is an integer between -99 and 99.", "editorial": "", "tag": "['Matrices', 'Dynamic programming', 'Data structures']", "difficulties": "MEDIUM", "source": "leetcode", "url": "https://leetcode.com/problems/minimum-falling-path-sum-ii/", "sample_test_cases": [{"input": [[[1, 2, 3], [6, 6, 7], [7, 8, 9], [], []]], "output": 13}]}
{"statement": "Task: Given a rectangle of size n x m, find the minimum number of integer-sided squares that tile the rectangle.\n\nInput: The input consists of two integers n and m, representing the dimensions of the rectangle. The input is provided through standard input. Constraints are 1 <= n <= 13 and 1 <= m <= 13.\n\nOutput: The output should be a single integer, representing the minimum number of integer-sided squares required to tile the given rectangle.\n\nConstraints: The input constraints are that n and m are both integers between 1 and 13, inclusive. \n\nMathematical Concepts: The problem involves finding the minimum number of squares required to tile a given rectangle, which can be represented as a grid of size n x m. The squares are assumed to be of integer side length. The problem can be viewed as a tiling problem, where the goal is to cover the entire grid with the minimum number of squares. \n\nComputer Science Concepts: The input is provided through standard input and consists of two integers. The output is a single integer. The problem can be solved using algorithms that involve dynamic programming or recursion. The constraints on the input size limit the search space and make it feasible to solve the problem using brute force.", "editorial": "", "tag": "['Dynamic programming', 'Complete search']", "difficulties": "MEDIUM", "source": "leetcode", "url": "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares/", "sample_test_cases": [{"input": [2, 3], "output": 3}]}
{"statement": "Task: Given an integer array arr and an integer k, partition the array into contiguous subarrays of length at most k. After partitioning, each subarray should have their values changed to become the maximum value of that subarray. Return the largest sum of the given array after partitioning.\n\nInput: The input consists of an integer array arr and an integer k, which arrives from standard input. The array length is between 1 and 500, each element of the array is between 0 and 10^9, and k is between 1 and the length of the array.\n\nOutput: The output is a single integer, which is the largest sum of the given array after partitioning.\n\nConstraints: The input array length is between 1 and 500, each element of the array is between 0 and 10^9, and k is between 1 and the length of the array.", "editorial": "", "tag": "['Dynamic programming', 'Data structures']", "difficulties": "MEDIUM", "source": "leetcode", "url": "https://leetcode.com/problems/partition-array-for-maximum-sum/", "sample_test_cases": [{"input": [[1, 15, 7, 9, 2, 5, 10], 3], "output": 84}]}
{"statement": "Task: Given an array of integers representing the price of a stock on each day, design an algorithm to find the maximum profit that can be obtained by buying and selling the stock on different days, with the restriction that you cannot engage in multiple transactions at the same time and you must wait for a cooldown day after selling a stock before buying again.\n\nInput: The input is an array of integers representing the price of the stock on each day. The input is provided through standard input.\n\nOutput: The output is a single integer representing the maximum profit that can be obtained by buying and selling the stock. The output is printed to standard output.\n\nConstraints: The input array has a length between 1 and 5000. Each element of the array is an integer between 0 and 10000.", "editorial": "", "tag": "['Dynamic programming', 'Data structures']", "difficulties": "MEDIUM_HARD", "source": "leetcode", "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/", "sample_test_cases": [{"input": [[1, 2, 3, 0, 2]], "output": 3}]}
{"statement": "Task: Given a list of non-negative integers representing the amount of money in each house arranged in a circle, find the maximum amount of money a professional robber can steal without alerting the police. Adjacent houses have a security system that will alert the police if two adjacent houses are robbed on the same night.\n\nInput: The input consists of a list of non-negative integers representing the amount of money in each house. The length of the list can be up to 100 and each element in the list can have a maximum value of 10^4. The input is read from standard input.\n\nOutput: The output should be a single integer representing the maximum amount of money the robber can steal without alerting the police.\n\nConstraints: The input list can have a maximum length of 100 and each element in the list can have a maximum value of 10^4.", "editorial": "", "tag": "['Dynamic programming', 'Data structures']", "difficulties": "MEDIUM_HARD", "source": "leetcode", "url": "https://leetcode.com/problems/house-robber-ii/", "sample_test_cases": [{"input": [[2, 3, 2]], "output": 3}]}
{"statement": "Task: Given a binary array of length n, find the length of the longest subarray of 1's after deleting one element. If there is no such subarray, return 0.\n\nInput: The input is a binary array of length n, where 1 <= n <= 10^5. The input is provided through standard input.\n\nOutput: The output is an integer representing the size of the longest subarray of 1's after deleting one element. If there is no such subarray, return 0.\n\nConstraints: The input array contains only 0's and 1's.", "editorial": "", "tag": "['Dynamic programming', 'Data structures', 'Amortized analysis']", "difficulties": "MEDIUM", "source": "leetcode", "url": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/", "sample_test_cases": [{"input": [[1, 1, 0, 1]], "output": 3}]}
{"statement": "Task: Given a positive integer x and a target value, find the shortest expression consisting of addition, subtraction, multiplication, and division of x that evaluates to the target value. The expression must follow the usual order of operations and cannot use unary negation.\n\nInput: The input consists of a single line containing two integers separated by a space: x and the target value.\n\nOutput: The output should be a single integer representing the minimum number of operators required to form an expression that evaluates to the target value.\n\nConstraints: The input integer x is between 2 and 100, and the target value is between 1 and 2*10^8.", "editorial": "", "tag": "['Dynamic programming', 'Mathematics']", "difficulties": "MEDIUM_HARD", "source": "leetcode", "url": "https://leetcode.com/problems/least-operators-to-express-number/", "sample_test_cases": [{"input": [3, 19], "output": 5}]}

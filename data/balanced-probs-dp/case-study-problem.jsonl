{"statement": "Task: Given an array of n integers, the task is to find the minimum number of operations required to make all the elements of the array equal to 1. In each operation, two adjacent elements are chosen and one of them is replaced with their greatest common divisor.\n\nInput: The input consists of two lines. The first line contains an integer n, the number of elements in the array. The second line contains n space-separated integers, the elements of the array. The input is provided through standard input.\n\nOutput: The output is a single integer, which is the minimum number of operations required to make all the elements of the array equal to 1. If it is not possible to make all the elements of the array equal to 1, then -1 is printed.\n\nConstraints: The input array contains n integers, where 1 \u2264 n \u2264 2000 and 1 \u2264 ai \u2264 109. The greatest common divisor of any two adjacent elements in the array can be computed in O(log(ai)) time.", "editorial": "", "tag": "['Greedy algorithms', 'Complete search', 'Number theory', 'Dynamic programming', 'Mathematics']", "difficulties": "MEDIUM", "source": "codeforces", "url": "https://codeforces.com/problemset/problem/892/C", "sample_test_cases": [{"input": "15\n2 6 6 6 3 3 3 15 5 5 5 7 5 5 5\n", "output": "15\n"}, {"input": "3\n30 14 21\n", "output": "4\n"}, {"input": "12\n10 10 14 14 14 14 14 14 14 14 21 21\n", "output": "20\n"}, {"input": "2\n1 1\n", "output": "0\n"}, {"input": "2\n1000000000 1000000000\n", "output": "-1\n"}, {"input": "5\n2 1 1 1 2\n", "output": "2\n"}, {"input": "6\n6 15 10 6 15 10\n", "output": "7\n"}, {"input": "4\n2 1 1 1\n", "output": "1\n"}, {"input": "4\n1 1 1 1\n", "output": "0\n"}, {"input": "3\n15 6 10\n", "output": "4\n"}, {"input": "3\n42 15 35\n", "output": "4\n"}, {"input": "6\n2 3 4 1 1 1\n", "output": "3\n"}, {"input": "4\n2 6 9 1\n", "output": "3\n"}, {"input": "9\n10 10 10 10 10 10 10 10 21\n", "output": "9\n"}, {"input": "15\n10 10 10 10 10 10 21 21 21 21 21 21 21 21 21\n", "output": "15\n"}]}
